[{"title": "How do I increase the cell width of the Jupyter/ipython notebook in my browser?", "question_body": "<p>I would like to increase the width of the ipython notebook in my browser. I have a high-resolution screen, and I would like to expand the cell width/size to make use of this extra space.</p>\n\n<p>Thanks!</p>\n\n<hr>\n\n<p>edit: 5/2017</p>\n\n<p>I now use jupyterthemes: <a href=\"https://github.com/dunovank/jupyter-themes\" rel=\"noreferrer\">https://github.com/dunovank/jupyter-themes</a></p>\n\n<p>and this command:</p>\n\n<pre><code>jt -t oceans16 -f roboto -fs 12 -cellw 100%\n</code></pre>\n\n<p>which sets the width to 100% with a nice theme.</p>\n", "link": "https://stackoverflow.com/questions/21971449/how-do-i-increase-the-cell-width-of-the-jupyter-ipython-notebook-in-my-browser", "question_id": 21971449, "accepted_answer_id": 34058270, "answer_body": "<p>If you don't want to change your default settings, and you only want to change the width of the current notebook you're working on, you can enter the following into a cell:</p>\n\n<pre><code>from IPython.core.display import display, HTML\ndisplay(HTML(\"&lt;style&gt;.container { width:100% !important; }&lt;/style&gt;\"))\n</code></pre>\n"}, {"title": "Conda environments not showing up in Jupyter Notebook", "question_body": "<p>I installed Anaconda (with Python 2.7), and installed Tensorflow in an environment called <code>tensorflow</code>. I can import Tensorflow successfully in that environment.</p>\n\n<p>The problem is that Jupyter Notebook does not recognize the new environment I just created. No matter I start Jupyter Notebook from the GUI Navigator or from the command line <strong>within</strong> the <code>tensorflow</code> env, there is only one kernel in the menu called <code>Python [Root]</code>, and Tensorflow cannot be imported. Of course, I clicked on that option multiple times, saved file, re-opened, but these did not help.</p>\n\n<p>Strangely, I can see the two environments when I open the <code>Conda</code> tab on the front page of Jupyter. But when I open the <code>Files</code> tab, and try to <code>new</code> a notebook, I still end up with only one kernel.</p>\n\n<p>I looked at this question:\n<a href=\"https://stackoverflow.com/questions/37433363/link-conda-environment-with-jupyter-notebook\">Link Conda environment with Jupyter Notebook</a>\nBut there isn't such a directory as <code>~/Library/Jupyter/kernels</code> on my computer! This Jupyter directory only has one sub-directory called <code>runtime</code>.</p>\n\n<p>I am really confused. Are Conda environments supposed to become kernels automatically? (I followed <a href=\"https://ipython.readthedocs.io/en/stable/install/kernel_install.html\">https://ipython.readthedocs.io/en/stable/install/kernel_install.html</a> to manually set up the kernels, but was told that <code>ipykernel</code> was not found.)</p>\n", "link": "https://stackoverflow.com/questions/39604271/conda-environments-not-showing-up-in-jupyter-notebook", "question_id": 39604271, "accepted_answer_id": null}, {"title": "How do I add python3 kernel to jupyter (IPython)", "question_body": "<p>My <code>Jupyter</code> notebooks installed with <code>python 2</code> kernel. I do not understand why. I might have messed something up when I did the install. I already have <code>python 3</code>  installed. How can I add it to <code>Jupyter</code>?\nHere's a screenshot of what the default <code>Jupyter</code> insalled with <code>python3 -m install jupyter</code> and opened in the browser with <code>jupyter notebook</code>looks like:\n<a href=\"https://i.stack.imgur.com/BgGiR.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/BgGiR.png\" alt=\"enter image description here\"></a></p>\n", "link": "https://stackoverflow.com/questions/28831854/how-do-i-add-python3-kernel-to-jupyter-ipython", "question_id": 28831854, "accepted_answer_id": null}, {"title": "How to embed image or picture in jupyter notebook, either from a local machine or from a web resource?", "question_body": "<p>I would like to include image in a jupyter notebook.</p>\n\n<p>If I did the following, it works :</p>\n\n<pre><code>from IPython.display import Image\nImage(\"img/picture.png\")\n</code></pre>\n\n<p>But I would like to include the images in a markdown cell and the following code gives a 404 error :</p>\n\n<pre><code>![title](\"img/picture.png\")\n</code></pre>\n\n<p>I also tried</p>\n\n<pre><code>![texte](\"http://localhost:8888/img/picture.png\")\n</code></pre>\n\n<p>But I still get the same error :</p>\n\n<pre><code>404 GET /notebooks/%22/home/user/folder/img/picture.png%22 (127.0.0.1) 2.74ms referer=http://localhost:8888/notebooks/notebook.ipynb\n</code></pre>\n", "link": "https://stackoverflow.com/questions/32370281/how-to-embed-image-or-picture-in-jupyter-notebook-either-from-a-local-machine-o", "question_id": 32370281, "accepted_answer_id": 32371085, "answer_body": "<p>You mustn't use quotation marks around the name of the image files in markdown!</p>\n\n<p>If you carefully read your error message, you will see the two <code>%22</code> parts in the link. That is the html encoded quotation mark. </p>\n\n<p>You have to change the line</p>\n\n<pre><code>![title](\"img/picture.png\")\n</code></pre>\n\n<p>to </p>\n\n<pre><code>![title](img/picture.png)</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>It is assumed, that you have the following file structure and that you run the  <code>jupyter notebook</code> command in the directory where the file <code>example.ipynb</code> (&lt;-- contains the markdown for the image)  is stored:</p>\n\n<pre><code>/\n+-- example.ipynb\n+-- img\n    +-- picture.png\n</code></pre>\n"}, {"title": "How to change the Jupyter start-up folder", "question_body": "<p>I tried following the instructions given on the <a href=\"http://jupyter-notebook-beginner-guide.readthedocs.org/en/latest/execute.html#change-jupyter-notebook-startup-folder-windows\" rel=\"noreferrer\">Jupyter Notebook documentation</a>.</p>\n\n<p>Unfortunately, I haven't been able to figure it out. Where exactly is this \"start in\" field?</p>\n\n<p>I've a windows 7 (64 bit) system, with Anaconda3 installed (not in C drive). I want to change Jupyter start folder location.</p>\n", "link": "https://stackoverflow.com/questions/35254852/how-to-change-the-jupyter-start-up-folder", "question_id": 35254852, "accepted_answer_id": 39453881, "answer_body": "<p><code>cd</code> into the directory or a parent directory (with the intended directory you will work nested in it).</p>\n\n<p>Note it must be a folder (<code>E:\\&gt;</code>   --- This will not work)</p>\n\n<p>Then just run the command <code>jupyter notebook</code></p>\n"}, {"title": "How do I comment out multiple lines in Jupyter Ipython notebook?", "question_body": "<p>I want to comment out a block of multiple lines in Jupyter (Ipython Notebook), but can't find out how to do that in this current version.<br>\nIt used to be in one of the drop down menus but is no longer there.<br>\nHow do you comment out multi-line blocks of code at once?</p>\n\n<p>This is not a duplicate because the solution given in the following link doesn't seem to work anymore:<br>\n<a href=\"https://stackoverflow.com/questions/19318298/how-can-i-block-comment-code-in-the-ipython-notebook\">How can I block comment code in the IPython notebook?</a>  </p>\n\n<p><kbd>Ctrl</kbd> + <kbd>/</kbd> does nothing.</p>\n", "link": "https://stackoverflow.com/questions/29885371/how-do-i-comment-out-multiple-lines-in-jupyter-ipython-notebook", "question_id": 29885371, "accepted_answer_id": 30981483, "answer_body": "<p><kbd>Ctrl</kbd> + <kbd>/</kbd> works for me in Chrome browser in MS Windows. On a Mac, use <kbd>Cmd</kbd> + <kbd>/</kbd> (thanks Anton K).</p>\n\n<hr>\n\n<p>Please note, if <code>/</code> did not work out of the box, try pressing the <code>/</code> key on the Numpad. Credit: <a href=\"https://stackoverflow.com/users/2418922/dreamflasher\">@DreamFlasher</a> in comments to this question.</p>\n"}, {"title": "How to load/edit/run/save text files (.py) into an IPython notebook cell?", "question_body": "<p>I've recently moved over to using IPython notebooks as part of my workflow.  However, I've not been successful in finding a way to import .py files into the individual cells of an open IPython notebook so that they can edited, run and then saved. Can this be done?</p>\n\n<p>I've found <a href=\"http://ipython.org/ipython-doc/stable/notebook/notebook.html#importing-py-files\" rel=\"noreferrer\">this</a> in the documentation which tells me how to import .py files as new notebooks but this falls short of what I want to achieve.</p>\n\n<p>Any suggestions would be much appreciated.</p>\n", "link": "https://stackoverflow.com/questions/21034373/how-to-load-edit-run-save-text-files-py-into-an-ipython-notebook-cell", "question_id": 21034373, "accepted_answer_id": 21034906, "answer_body": "<blockquote>\n  <p><strong>EDIT</strong>: Starting from IPython 3 (now Jupyter project), the notebook has a text editor that can be used as a more convenient alternative to\n  load/edit/save text files.</p>\n</blockquote>\n\n<p>A text file can be loaded in a notebook cell with the magic command <code>%load</code>.</p>\n\n<p>If you execute a cell containing:</p>\n\n<pre><code>%load filename.py\n</code></pre>\n\n<p>the content of <code>filename.py</code> will be loaded in the next cell. You can edit and execute it as usual.</p>\n\n<p>To save the cell content back into a file add the cell-magic <code>%%writefile filename.py</code> at the beginning of the cell and run it. Beware that if a file with the same name already exists <strong>it will be silently overwritten</strong>.</p>\n\n<p>To see the help for any magic command add a <code>?</code>: like <code>%load?</code> or <code>%%writefile?</code>.</p>\n\n<p>For general help on magic functions type \"%magic\"\nFor a list of the available magic functions, use %lsmagic. For a description\nof any of them, type %magic_name?, e.g. '%cd?'.</p>\n\n<p><em>See also: <a href=\"http://ipython.org/ipython-doc/dev/interactive/tutorial.html#magic-functions\" rel=\"noreferrer\">Magic functions</a> from the official IPython docs.</em></p>\n"}, {"title": "Change IPython/Jupyter notebook working directory", "question_body": "<p>When I open an Jupyter notebook (formerly IPython) it defaults to <code>C:\\Users\\USERNAME</code>.</p>\n\n<p>How can I change this so to another location?</p>\n\n<p>Thanks.</p>\n", "link": "https://stackoverflow.com/questions/15680463/change-ipython-jupyter-notebook-working-directory", "question_id": 15680463, "accepted_answer_id": 15682400, "answer_body": "<p><code>jupyter notebook --help-all</code> could be of help:</p>\n\n<pre><code>--notebook-dir=&lt;Unicode&gt; (NotebookManager.notebook_dir)\n    Default: u'/Users/me/ipynbs'\n    The directory to use for notebooks.\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>jupyter notebook --notebook-dir=/Users/yourname/folder1/folder2/\n</code></pre>\n\n<p>You can of course set it in your profiles if needed, you might need to escape backslash in Windows.</p>\n\n<p>Note that this will override whatever path you might have set in a jupyter_notebook_config.py file.  (Where you can set a variable <code>c.NotebookApp.notebook_dir</code> that will be your default startup location.)</p>\n"}, {"title": "In which conda environment is Jupyter executing?", "question_body": "<p>I have jupyter/anaconda/python3.5.</p>\n\n<ol>\n<li><p>How can I know which conda environment is my jupyter notebook running on?    </p></li>\n<li><p>How can I launch jupyter from a new conda environment?</p></li>\n</ol>\n", "link": "https://stackoverflow.com/questions/37085665/in-which-conda-environment-is-jupyter-executing", "question_id": 37085665, "accepted_answer_id": 39070588, "answer_body": "<h1>Question 1: Find the current notebook's conda environment</h1>\n\n<p>Open the notebook in Jupyter Notebooks and look in the upper right corner of the screen. </p>\n\n<p>It should say, for example, \"Python [env_name]\" if the language is Python and it's using an environment called env_name. </p>\n\n<p><a href=\"https://i.stack.imgur.com/c22av.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/c22av.png\" alt=\"jupyter notebook with name of environment\"></a></p>\n\n<hr>\n\n<h1>Question 2: Start Jupyter Notebook from within a different conda environment</h1>\n\n<p>Activate a conda environment in your terminal using <code>source activate &lt;environment name&gt;</code> before you run <code>jupyter notebook</code>. This <a href=\"https://stackoverflow.com/q/38984238/3345375\">sets the default environment</a> for Jupyter Notebooks. Otherwise, the [Root] environment is the default.</p>\n\n<p><a href=\"https://i.stack.imgur.com/0Qgkx.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/0Qgkx.png\" alt=\"jupyter notebooks home screen, conda tab, create new environment\"></a></p>\n\n<p>You can also create new environments from within Jupyter Notebook (home screen, Conda tab, and then click the plus sign).</p>\n\n<p>And you can create a notebook in any environment you want. Select the \"Files\" tab on the home screen and click the \"New\" dropdown menu, and in that menu select a Python environment from the list.</p>\n\n<p><a href=\"https://i.stack.imgur.com/otShT.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/otShT.png\" alt=\"jupyter notebooks home screen, files tab, create new notebook\"></a></p>\n"}, {"title": "How can I share Jupyter notebooks with non-programmers?", "question_body": "<p>I am trying to wrap my head around what I can/cannot do with Jupyter.</p>\n\n<p>I have a Jupyter server running on our internal server, accessible via VPN and password protected. </p>\n\n<p>I am the only one actually creating notebooks but I would like to make some notebooks visible to other team members in a read-only way. Ideally I could just share a URL with them that they would bookmark for when they want to see the notebook with refreshed data.</p>\n\n<p>I saw export options but cannot find any mention of \"publishing\" or \"making public\" local live notebooks. Is this impossible? Is it maybe just a wrong way to think about how Jupyter should be used?</p>\n", "link": "https://stackoverflow.com/questions/31855794/how-can-i-share-jupyter-notebooks-with-non-programmers", "question_id": 31855794, "accepted_answer_id": 33248969, "answer_body": "<p>The \"best\" way to share a Jupyter notebook is to simply to place it on GitHub (and view it directly) or some other public link and use the <a href=\"https://nbviewer.jupyter.org/\" rel=\"nofollow noreferrer\">Jupyter Notebook Viewer</a>. When privacy is more of an issue then there are alternatives but it's certainly more complex, there's no built in way to do this in Jupyter alone but a couple of options are:</p>\n\n<h2>Host your own nbviewer</h2>\n\n<p>GitHub and the Jupyter Notebook Veiwer both use the same tool to render <code>.ipynb</code> files into static HTML, this tool is <a href=\"https://github.com/jupyter/nbviewer\" rel=\"nofollow noreferrer\">nbviewer</a>.</p>\n\n<p>The installation instructions are more complex than I'm willing to go into here but if your company/team has a shared server that doesn't require password access then you could host the nbviewer on that server and direct it to load from your credentialed server. This will probably require some more advanced configuration than you're going to find in the docs.</p>\n\n<h2>Set up a deployment script</h2>\n\n<p>If you don't necessarily need <em>live</em> updating HTML then you could set up a script on your credentialed server that will simply use Jupyter's built in export options to create the static HTML files and then send those to a more publicly accessible server. </p>\n"}, {"title": "Simple way to measure cell execution time in ipython notebook", "question_body": "<p>I would like to get the time spent on the cell execution in addition to the original output from cell.</p>\n\n<p>To this end, I tried <code>%%timeit -r1 -n1</code> but it doesn't expose the variable defined within cell.</p>\n\n<p><code>%%time</code> works for cell which only contains 1 statement.</p>\n\n<pre><code>In[1]: %%time\n       1\nCPU times: user 4 \u00b5s, sys: 0 ns, total: 4 \u00b5s\nWall time: 5.96 \u00b5s\nOut[1]: 1\n\nIn[2]: %%time\n       # Notice there is no out result in this case.\n       x = 1\n       x\nCPU times: user 3 \u00b5s, sys: 0 ns, total: 3 \u00b5s\nWall time: 5.96 \u00b5s\n</code></pre>\n\n<p>What's the best way to do it?</p>\n\n<h3>Update</h3>\n\n<p>I have been using <a href=\"https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/execute_time\" rel=\"noreferrer\">Execute Time in Nbextension</a> for quite some time now. It is great.</p>\n", "link": "https://stackoverflow.com/questions/32565829/simple-way-to-measure-cell-execution-time-in-ipython-notebook", "question_id": 32565829, "accepted_answer_id": 36690084, "answer_body": "<p>Use cell magic and this project on github by Phillip Cloud: </p>\n\n<p>Load it by putting this at the top of your notebook or put it in your config file if you always want to load it by default:</p>\n\n<pre><code>%install_ext https://raw.github.com/cpcloud/ipython-autotime/master/autotime.py\n%load_ext autotime\n</code></pre>\n\n<p>If loaded, every output of subsequent cell execution will include the time in min and sec it took to execute it.</p>\n"}, {"title": "Removing Conda environment", "question_body": "<p>I want to remove a certain environment created with conda. How can I achieve that? Let's say I have an active testenv environment. I tried, by following <a href=\"https://conda.io/docs/commands/env/conda-env-remove.html\" rel=\"noreferrer\">documentation</a>, with:</p>\n\n<pre><code>$ conda env remove\n\nCondaEnvironmentError: cannot remove current environment. deactivate and run conda remove again\n</code></pre>\n\n<p>I then deactivate it:</p>\n\n<pre><code>$ source deactivate\n</code></pre>\n\n<p>I try running again the command to remove it and I still get the same error. What is going wrong here?</p>\n", "link": "https://stackoverflow.com/questions/49127834/removing-conda-environment", "question_id": 49127834, "accepted_answer_id": null}, {"title": "Showing line numbers in IPython/Jupyter Notebooks", "question_body": "<p>Error reports from most language kernels running in IPython/Jupyter Notebooks indicate the line on which the error occurred; but (at least by default) no line numbers are indicated in Notebooks.</p>\n\n<p>Is it possibile to add the line numbers to IPython/Jupyter Notebooks?</p>\n", "link": "https://stackoverflow.com/questions/10979667/showing-line-numbers-in-ipython-jupyter-notebooks", "question_id": 10979667, "accepted_answer_id": 10986483, "answer_body": "<p><kbd>CTRL</kbd> - <kbd>M</kbd><kbd>L</kbd> toggles line numbers in the CodeMirror area.  See the QuickHelp for other keyboard shortcuts.</p>\n\n<p>In more details <kbd>CTRL</kbd> - <kbd>M</kbd> (or <kbd>ESC</kbd>) bring you to command mode, then pressing the <kbd>L</kbd> keys should toggle the visibility of current cell line numbers. In more recent notebook versions <kbd>Shift-L</kbd> should toggle for all cells.</p>\n\n<p>If you can't remember the shortcut, bring up the command palette <kbd>Ctrl-Shift+P</kbd> (<kbd>Cmd+Shift+P</kbd> on Mac), and search for \"line numbers\"), it should allow to toggle and show you the shortcut.</p>\n"}, {"title": "How can I see function arguments in IPython Notebook Server 3?", "question_body": "<p>I've recently switched to IPython Notebook 3 (3.1.0-cbccb68 to be exact), the Anaconda version. Previously when I typed a function and opened a parenthesis like this:</p>\n\n<pre><code>time.sleep()\n</code></pre>\n\n<p>and if the cursor was between the parentheses then I would get a contextual overlay menu that displayed the function arguments. Now I don't see it, and although I've searched, I can't find out how I can turn on this functionality. </p>\n", "link": "https://stackoverflow.com/questions/30855169/how-can-i-see-function-arguments-in-ipython-notebook-server-3", "question_id": 30855169, "accepted_answer_id": 30855843, "answer_body": "<p>In 1.0, the functionality was bound to <code>(</code> and <code>tab</code> and <code>shift-tab</code>, in 2.0 <code>tab</code> was deprecated but still functional in some unambiguous cases completing or inspecting were competing in many cases. Recommendation was to always use <code>shift-Tab</code>. <code>(</code> was also added as deprecated as confusing in Haskell-like syntax to also push people toward Shift-Tab as it works in more cases. in 3.0 the deprecated bindings have been remove in favor of the official, present for 18+ month now <code>Shift-Tab</code>.</p>\n\n<p>So press <code>Shift-Tab</code>.</p>\n"}, {"title": "Get Output From the logging Module in IPython Notebook", "question_body": "<p>When I running the following inside IPython Notebook I don't see any output:</p>\n\n<pre><code>import logging\nlogging.basicConfig(level=logging.DEBUG)\nlogging.debug(\"test\")\n</code></pre>\n\n<p>Anyone know how to make it so I can see the \"test\" message inside the notebook?</p>\n", "link": "https://stackoverflow.com/questions/18786912/get-output-from-the-logging-module-in-ipython-notebook", "question_id": 18786912, "accepted_answer_id": 18809051, "answer_body": "<p>Try following:</p>\n\n<pre><code>import logging\nlogger = logging.getLogger()\nlogger.setLevel(logging.DEBUG)\nlogging.debug(\"test\")\n</code></pre>\n\n<p>According to <a href=\"http://docs.python.org/2/library/logging.html#logging.basicConfig\">logging.basicConfig</a>:</p>\n\n<blockquote>\n  <p>Does basic configuration for the logging system by creating a\n  StreamHandler with a default Formatter and adding it to the root\n  logger. The functions debug(), info(), warning(), error() and\n  critical() will call basicConfig() automatically if no handlers are\n  defined for the root logger.</p>\n  \n  <p><strong>This function does nothing if the root logger already has handlers\n  configured for it.</strong></p>\n</blockquote>\n\n<p>It seems like ipython notebook call basicConfig (or set handler) somewhere.</p>\n"}, {"title": "After installing with pip, &quot;jupyter: command not found&quot;", "question_body": "<p>After installing with <code>pip install jupyter</code>, terminal still cannot find <code>jupyter notebook</code>.  </p>\n\n<p>Ubuntu simply says <code>command not found</code>.  Similar with <code>ipython</code>.  Did <code>pip</code> not get install properly or something?  How does Ubuntu know where to look for executables installed with <code>pip</code>?</p>\n", "link": "https://stackoverflow.com/questions/35313876/after-installing-with-pip-jupyter-command-not-found", "question_id": 35313876, "accepted_answer_id": 35318514, "answer_body": "<p>you did not log out and log in ? It should be on your path to execute. \nIf not, pip installed executables in .local, so in a terminal:</p>\n\n<pre><code> ~/.local/bin/jupyter-notebook\n</code></pre>\n\n<p>should start notebook</p>\n"}, {"title": "collapse cell in jupyter notebook", "question_body": "<p>I am using ipython Jupyter notebook. Let's say I defined a function that occupies a lot of space on my screen. Is there a way to collapse the cell? </p>\n\n<p>I want the function to remain executed and callable, yet I want to hide / collapse the cell in order to better visualize the notebook. How can I do this?</p>\n", "link": "https://stackoverflow.com/questions/33159518/collapse-cell-in-jupyter-notebook", "question_id": 33159518, "accepted_answer_id": 42056357, "answer_body": "<p>The <a href=\"https://github.com/ipython-contrib/jupyter_contrib_nbextensions\" rel=\"noreferrer\"><code>jupyter contrib nbextensions</code></a> Python package contains a code-folding extension that can be enabled within the notebook. Follow the link (Github) for documentation.</p>\n\n<p>To install using command line:</p>\n\n<pre><code>pip install jupyter_contrib_nbextensions\njupyter contrib nbextension install --user\n</code></pre>\n\n<p>To make life easier in managing them, I'd also recommend the <a href=\"https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator\" rel=\"noreferrer\"><code>jupyter nbextensions configurator</code></a> package. This provides an extra tab in your Notebook interface from where you can easily (de)activate all installed extensions.</p>\n\n<p>Installation:</p>\n\n<pre><code>pip install jupyter_nbextensions_configurator\njupyter nbextensions_configurator enable --user\n</code></pre>\n"}, {"title": "Can I run Keras model on gpu?", "question_body": "<p>I'm running a Keras model, with a submission deadline of 36 hours, if I train my model on the cpu it will take approx 50 hours, is there a way to run Keras on gpu?</p>\n\n<p>I'm using Tensorflow backend and running it on my Jupyter notebook, without anaconda installed.</p>\n", "link": "https://stackoverflow.com/questions/45662253/can-i-run-keras-model-on-gpu", "question_id": 45662253, "accepted_answer_id": 45662992, "answer_body": "<p>Yes you can run keras models on GPU. Few things you will have to check first.</p>\n\n<ol>\n<li>your system has GPU (Nvidia. As AMD doesn't work yet)</li>\n<li>You have installed the GPU version of tensorflow </li>\n<li>You have installed CUDA <a href=\"https://www.tensorflow.org/install/install_linux\" rel=\"noreferrer\">installation instructions</a></li>\n<li>Verify that tensorflow is running with GPU <a href=\"https://stackoverflow.com/questions/38009682/how-to-tell-if-tensorflow-is-using-gpu-acceleration-from-inside-python-shell\">check if GPU is working</a></li>\n</ol>\n\n<p><code>sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))</code></p>\n\n<p>OR</p>\n\n<pre><code>from tensorflow.python.client import device_lib\nprint(device_lib.list_local_devices())\n</code></pre>\n\n<p>output will be something like this:</p>\n\n<pre><code>[\n  name: \"/cpu:0\"device_type: \"CPU\",\n  name: \"/gpu:0\"device_type: \"GPU\"\n]\n</code></pre>\n\n<p>Once all this is done your model will run on GPU:</p>\n\n<p>To Check if keras(>=2.1.1) is using GPU:</p>\n\n<pre><code>from keras import backend as K\nK.tensorflow_backend._get_available_gpus()\n</code></pre>\n\n<p>All the best.</p>\n"}, {"title": "How to pickle or store Jupyter (IPython) notebook session for later", "question_body": "<p>Let's say I am doing a larger data analysis in Jupyter/Ipython notebook with lots of time consuming computations done. Then, for some reason, I have to shut down the jupyter local server I, but I would like to return to doing the analysis later, without having to go through all the time-consuming computations again.</p>\n\n<hr>\n\n<p>What I would <strike>like</strike> love to do is <code>pickle</code> or store the whole Jupyter session (all pandas dataframes, np.arrays, variables, ...) so I can safely shut down the server knowing I can return to my session in exactly the same state as before.</p>\n\n<p><strong>Is it even technically possible? Is there a built-in functionality I overlooked?</strong></p>\n\n<hr>\n\n<p><strong>EDIT:</strong> based on <a href=\"https://stackoverflow.com/a/634581/4050925\">this</a> answer there is a <code>%store</code> <a href=\"http://ipython.org/ipython-doc/rel-0.12/config/extensions/storemagic.html\" rel=\"noreferrer\">magic</a> which should be \"lightweight pickle\". However you have to store the variables manually like so:</p>\n\n<p><code>#inside a ipython/nb session</code><br>\n<code>foo = \"A dummy string\"</code><br>\n<code>%store foo</code><br>\n<em>closing seesion, restarting kernel</em><br>\n<code>%store -r foo</code> # r for refresh<br>\n<code>print(foo) # \"A dummy string\"</code></p>\n\n<p>which is fairly close to what I would want, but having to do it manually and being unable to distinguish between different sessions makes it less useful.</p>\n", "link": "https://stackoverflow.com/questions/34342155/how-to-pickle-or-store-jupyter-ipython-notebook-session-for-later", "question_id": 34342155, "accepted_answer_id": 50985430, "answer_body": "<p>I think Dill answers your question well.</p>\n\n<pre><code>pip install dill\n</code></pre>\n\n<p>Save a Notebook session:</p>\n\n<pre><code>import dill\ndill.dump_session('notebook_env.db')\n</code></pre>\n\n<p>Restore a Notebook session:</p>\n\n<pre><code>import dill\ndill.load_session('notebook_env.db')\n</code></pre>\n\n<p><a href=\"https://www.reddit.com/r/IPython/comments/6reiqp/how_can_i_save_and_load_the_state_of_the_kernel/dl6f2yn\" rel=\"noreferrer\">Source</a></p>\n"}, {"title": "How to display full output in Jupyter, not only last result?", "question_body": "<p>I want Jupyter to print all the interactive output without resorting to print, not only the last result. How to do it?</p>\n\n<p>Example : </p>\n\n<pre><code>a=3\na\na+1\n</code></pre>\n\n<p>I would like to display</p>\n\n<blockquote>\n  <p>3<br>\n  4</p>\n</blockquote>\n", "link": "https://stackoverflow.com/questions/36786722/how-to-display-full-output-in-jupyter-not-only-last-result", "question_id": 36786722, "accepted_answer_id": 36835741, "answer_body": "<p>Thanks to Thomas, here is the solution I was looking for:</p>\n\n<pre><code>from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n</code></pre>\n"}, {"title": "What is the currently correct way to dynamically update plots in Jupyter/iPython?", "question_body": "<p>In the answers to <a href=\"https://stackoverflow.com/questions/21360361/how-to-dynamically-update-a-plot-in-a-loop-in-ipython-notebook-within-one-cell\">how to dynamically update a plot in a loop in ipython notebook (within one cell)</a>, an example is given of how to dynamically update a plot inside a Jupyter notebook within a Python loop. However, this works by destroying and re-creating the plot on every iteration, and a comment in one of the threads notes that this situation can be improved by using the new-ish <code>%matplotlib nbagg</code> magic, which provides an interactive figure embedded in the notebook, rather than a static image.</p>\n\n<p>However, this wonderful new <code>nbagg</code> feature seems to be completely undocumented as far as I can tell, and I'm unable to find an example of how to use it to dynamically update a plot. Thus my question is, <strong>how does one efficiently update an existing plot in a Jupyter/Python notebook, using the nbagg backend?</strong> Since dynamically updating plots in matplotlib is a tricky issue in general, a simple working example would be an enormous help. A pointer to any documentation on the topic would also be extremely helpful.</p>\n\n<p>To be clear what I'm asking for: what I want to do is to run some simulation code for a few iterations, then draw a plot of its current state, then run it for a few more iterations, then update the plot to reflect the current state, and so on. So the idea is to draw a plot and then, without any interaction from the user, update the data in the plot without destroying and re-creating the whole thing.</p>\n\n<p>Here is some slightly modified code from the answer to the linked question above, which achieves this by re-drawing the whole figure every time. I want to achieve the same result, but more efficiently using <code>nbagg</code>.</p>\n\n<pre><code>%matplotlib inline\nimport time\nimport pylab as pl\nfrom IPython import display\nfor i in range(10):\n    pl.clf()\n    pl.plot(pl.randn(100))\n    display.display(pl.gcf())\n    display.clear_output(wait=True)\n    time.sleep(1.0)\n</code></pre>\n", "link": "https://stackoverflow.com/questions/34486642/what-is-the-currently-correct-way-to-dynamically-update-plots-in-jupyter-ipython", "question_id": 34486642, "accepted_answer_id": 34486703, "answer_body": "<p>Here is an example that updates a plot in a loop. It updates the data in the figure and does not redraw the whole figure every time. It does block execution, though if you're interested in running a finite set of simulations and saving the results somewhere, it may not be a problem for you.</p>\n\n<pre><code>%matplotlib notebook\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport time\n\ndef pltsin(ax, colors=['b']):\n    x = np.linspace(0,1,100)\n    if ax.lines:\n        for line in ax.lines:\n            line.set_xdata(x)\n            y = np.random.random(size=(100,1))\n            line.set_ydata(y)\n    else:\n        for color in colors:\n            y = np.random.random(size=(100,1))\n            ax.plot(x, y, color)\n    fig.canvas.draw()\n\nfig,ax = plt.subplots(1,1)\nax.set_xlabel('X')\nax.set_ylabel('Y')\nax.set_xlim(0,1)\nax.set_ylim(0,1)\nfor f in range(5):\n    pltsin(ax, ['b', 'r'])\n    time.sleep(1)\n</code></pre>\n\n<p><a href=\"http://nbviewer.ipython.org/gist/branning/c8e63ce81be0391260b1\">I put this up on nbviewer here.</a></p>\n\n<p>There is an <a href=\"https://github.com/matplotlib/matplotlib/pull/5754\">IPython Widget version of <code>nbagg</code> that is currently a work in progress at the Matplotlib repository</a>. When that is available, that will probably be the best way to use <code>nbagg</code>.</p>\n\n<p>EDIT: updated to show multiple plots</p>\n"}, {"title": "IPython/Jupyter Problems saving notebook as PDF", "question_body": "<p>So, i've been trying to save a jupyter notebook as PDF but i just can't figure out how to do this. The first thing i try is from the file menu just download as PDF, but doing that results in:</p>\n\n<pre><code>nbconvert failed: PDF creating failed\n</code></pre>\n\n<p>the next thing i try is try to do the conversion from the Command Prompt like this</p>\n\n<pre><code>$ ipython nbconvert --to latex --post PDF MyNotebook.ipynb \n</code></pre>\n\n<p>but again, this results in an error message</p>\n\n<pre><code>ImportError: No module named 'PDF'\n</code></pre>\n\n<p>and if i try</p>\n\n<pre><code>$ ipython nbconvert --to latex MyNotebook.ipynb \n</code></pre>\n\n<p>this results in </p>\n\n<pre><code>IPython.nbconvert.utils.pandoc.PandocMissing: Pandoc wasn't found:\nPlease check that pandoc is installed\n</code></pre>\n\n<p>if i try to install pandoc (<code>pip install pandoc</code>), this gives me</p>\n\n<pre><code>ImportError: No module named 'ConfigParser'\n</code></pre>\n\n<p>and this is where i get stuck because i just don't know what else to do.\nAnyone have idea how to fix whatever is wrong?</p>\n", "link": "https://stackoverflow.com/questions/29156653/ipython-jupyter-problems-saving-notebook-as-pdf", "question_id": 29156653, "accepted_answer_id": null}, {"title": "How to programmatically generate markdown output in Jupyter notebooks?", "question_body": "<p>I want to write a report for classes in Jupyter notebook. I'd like to count some stuff, generate some results and include them in markdown. Can I set the output of the cell to be interpreted as markdown?<br>\nI'd like such command: <code>print '$\\phi$'</code> to generate phi symbol, just like in markdown.<br>\nIn other words, I'd like to have a template made in markdown and insert the values generated by the program written in the notebook. Recalculating the notebook should generate new results and new markdown with those new values inserted. Is that possible with this software, or do I need to replace the values by myself?</p>\n", "link": "https://stackoverflow.com/questions/36288670/how-to-programmatically-generate-markdown-output-in-jupyter-notebooks", "question_id": 36288670, "accepted_answer_id": 36313217, "answer_body": "<p>The functions you want are in the <a href=\"http://ipython.readthedocs.org/en/stable/api/generated/IPython.display.html#module-IPython.display\" rel=\"noreferrer\">IPython.display module</a>.</p>\n\n<pre><code>from IPython.display import display, Markdown, Latex\ndisplay(Markdown('*some markdown* $\\phi$'))\n# If you particularly want to display maths, this is more direct:\ndisplay(Latex('\\phi'))\n</code></pre>\n"}, {"title": "Jupyter Notebook in Pycharm", "question_body": "<p>I am trying to use the jupyter notebook in Pycharm but I realized that in the new Jupyter update, there was the addition of tokens. I am following the tutorial below from <a href=\"https://www.jetbrains.com/help/pycharm/2016.1/tutorial-using-ipython-jupyter-notebook-with-pycharm.html\" rel=\"nofollow noreferrer\">JetBrains</a>.</p>\n\n<p>With all the settings initiated with the virtual environment created, and setting the URL as 127.0.0.1:8888, however, when I click on the run cell button, it follows that I get the following message from Jupyter Notebook asking: \"Please, enter your authentication token\", like this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/NjpWR.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/NjpWR.png\" alt=\"PyCharm error message: Enter Jupyter Notebook URL authentication token\"></a></p>\n\n<p>I looked it up on the jupyter update blog and it says that my web browser should be initiated which generates a token for access, but I do not see that my browser is loaded here. </p>\n\n<p>Help would be greatly appreciated here.</p>\n", "link": "https://stackoverflow.com/questions/41736309/jupyter-notebook-in-pycharm", "question_id": 41736309, "accepted_answer_id": 41843658, "answer_body": "<p>Running <code>jupyter notebook list</code> will display all of the running servers on your machine. So doing this in the terminal after starting a cell in PyCharm will result in output similar to \n<code>\nCurrently running servers:\nhttp://127.0.0.1:8888/?token=f85145dda03dc598bbbfa6e53b93cbcb27629ea00cfd2105 :: /home/....\n</code>\nwhich contains the appropriate token for authenticating.</p>\n"}, {"title": "How to recover deleted Jupyter notebook cell?", "question_body": "<p>I use Jupyter notebook. I accidentally deleted a cell, and I can't go step back.</p>\n\n<p>How can I recover the notebook cell?</p>\n", "link": "https://stackoverflow.com/questions/48814309/how-to-recover-deleted-jupyter-notebook-cell", "question_id": 48814309, "accepted_answer_id": 48814356, "answer_body": "<p>If you go to \"Edit\", there's an option for \"Undo Delete Cells\".</p>\n\n<p>If you are familiar with shortcuts, you can do <kbd>cmd</kbd> + <kbd>shift </kbd> + <kbd>p</kbd> and then type in <code>undo</code> to recover as well. No need to moving your mouse around.</p>\n"}, {"title": "IOPub data rate exceeded in Jupyter notebook (when viewing image)", "question_body": "<p>I want to view an image in Jupyter notebook. It's a 9.9MB .png file.</p>\n\n<pre><code>from IPython.display import Image\nImage(filename='path_to_image/image.png')\n</code></pre>\n\n<p>I get the below error:</p>\n\n<pre><code>IOPub data rate exceeded.\nThe notebook server will temporarily stop sending output\nto the client in order to avoid crashing it.\n</code></pre>\n\n<p>A bit surprising and <a href=\"https://github.com/ioam/holoviews/issues/1181\" rel=\"noreferrer\">reported elsewhere</a>.</p>\n\n<p>Is this expected and is there a simple solution? </p>\n\n<p>(Error msg suggests changing limit in <code>--NotebookApp.iopub_data_rate_limit</code>.)</p>\n", "link": "https://stackoverflow.com/questions/43288550/iopub-data-rate-exceeded-in-jupyter-notebook-when-viewing-image", "question_id": 43288550, "accepted_answer_id": 43420383, "answer_body": "<p>I ran into this using <code>networkx</code> and <code>bokeh</code></p>\n\n<p>This works for me in Windows 7 (<a href=\"http://jupyter-notebook.readthedocs.io/en/latest/config.html\" rel=\"noreferrer\">taken from here</a>):</p>\n\n<ol>\n<li><p>To create a jupyter_notebook_config.py file, with all the defaults commented out, you can use the following command line: </p>\n\n<p><code>$ jupyter notebook --generate-config</code></p></li>\n<li><p>Open the file and search for <code>c.NotebookApp.iopub_data_rate_limit</code></p></li>\n<li><p>Comment out the line <code>c.NotebookApp.iopub_data_rate_limit = 1000000</code> and change it to a higher default rate. l used <code>c.NotebookApp.iopub_data_rate_limit = 10000000</code></p></li>\n</ol>\n\n<p>This unforgiving default config is popping up in a lot of places.  See git issues:</p>\n\n<ul>\n<li><p><a href=\"https://github.com/jupyter/notebook/issues/2287\" rel=\"noreferrer\">jupyter</a></p></li>\n<li><p><a href=\"https://github.com/ioam/holoviews/issues/1181\" rel=\"noreferrer\">IOPub data rate exceeded</a></p></li>\n</ul>\n\n<p>It looks like it might get resolved with the <code>5.1 release</code></p>\n\n<h2>Update:</h2>\n\n<p>Jupyter notebook is now on <a href=\"http://jupyter-notebook.readthedocs.io/en/stable/changelog.html\" rel=\"noreferrer\">release <code>5.2.2</code></a>.  This problem should have been <a href=\"https://github.com/jupyter/notebook/issues/2287\" rel=\"noreferrer\">resolved</a>.  Upgrade using conda or pip.</p>\n"}, {"title": "How do I reset the Jupyter/IPython input prompt numbering?", "question_body": "<p>I just wrote my first extensive Python tutorial using IPython notebooks.   All went well, except I did a lot of testing and moving blocks around.   How do I reset the <code>In [ ]:</code> numbering?  I have tried quitting and reloading, but that doesn't seem to work.</p>\n", "link": "https://stackoverflow.com/questions/18817690/how-do-i-reset-the-jupyter-ipython-input-prompt-numbering", "question_id": 18817690, "accepted_answer_id": null}, {"title": "Simple way to visualize a TensorFlow graph in Jupyter?", "question_body": "<p>The official way to visualize a TensorFlow graph is with TensorBoard, but sometimes I just want a quick look at the graph when I'm working in Jupyter.</p>\n\n<p>Is there a quick solution, ideally based on TensorFlow tools, or standard SciPy packages (like matplotlib), but if necessary based on 3rd party libraries?</p>\n", "link": "https://stackoverflow.com/questions/38189119/simple-way-to-visualize-a-tensorflow-graph-in-jupyter", "question_id": 38189119, "accepted_answer_id": 55028643, "answer_body": "<p><code>TensorFlow 2.0</code> now supports<code>TensorBoard</code>in<code>Jupyter</code>via magic commands (e.g <code>%tensorboard --logdir logs/train</code>). Here's a <a href=\"https://github.com/tensorflow/tensorboard/tree/master/docs/r2\" rel=\"noreferrer\">link</a> to tutorials and examples.</p>\n\n<p><strong>[EDITS 1, 2]</strong></p>\n\n<p>As @MiniQuark mentioned in a comment, we need to load the extension first(<code>%load_ext tensorboard.notebook</code>). </p>\n\n<p>Below are usage examples for using <em>graph mode</em>, <em><code>@tf.function</code></em> and <em><code>tf.keras</code></em> (in <code>tensorflow==2.0.0-alpha0</code>):</p>\n\n<h3>1. Example using <em>graph mode</em> in TF2 (via <code>tf.compat.v1.disable_eager_execution()</code>)</h3>\n\n<pre class=\"lang-py prettyprint-override\"><code>%load_ext tensorboard.notebook\nimport tensorflow as tf\ntf.compat.v1.disable_eager_execution()\nfrom tensorflow.python.ops.array_ops import placeholder\nfrom tensorflow.python.training.gradient_descent import GradientDescentOptimizer\nfrom tensorflow.python.summary.writer.writer import FileWriter\n\nwith tf.name_scope('inputs'):\n   x = placeholder(tf.float32, shape=[None, 2], name='x')\n   y = placeholder(tf.int32, shape=[None], name='y')\n\nwith tf.name_scope('logits'):\n   layer = tf.keras.layers.Dense(units=2)\n   logits = layer(x)\n\nwith tf.name_scope('loss'):\n   xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits)\n   loss_op = tf.reduce_mean(xentropy)\n\nwith tf.name_scope('optimizer'):\n   optimizer = GradientDescentOptimizer(0.01)\n   train_op = optimizer.minimize(loss_op)\n\nFileWriter('logs/train', graph=train_op.graph).close()\n%tensorboard --logdir logs/train\n</code></pre>\n\n<h3>2. Same example as above but now using <em><code>@tf.function</code></em> decorator for forward-backward passes and without disabling eager execution:</h3>\n\n<pre class=\"lang-py prettyprint-override\"><code>%load_ext tensorboard.notebook\nimport tensorflow as tf\nimport numpy as np\n\nlogdir = 'logs/'\nwriter = tf.summary.create_file_writer(logdir)\ntf.summary.trace_on(graph=True, profiler=True)\n\n@tf.function\ndef forward_and_backward(x, y, w, b, lr=tf.constant(0.01)):\n\n    with tf.name_scope('logits'):\n        logits = tf.matmul(x, w) + b\n\n    with tf.name_scope('loss'):\n        loss_fn = tf.nn.sparse_softmax_cross_entropy_with_logits(\n            labels=y, logits=logits)\n        reduced = tf.reduce_sum(loss_fn)\n\n    with tf.name_scope('optimizer'):\n        grads = tf.gradients(reduced, [w, b])\n        _ = [x.assign(x - g*lr) for g, x in zip(grads, [w, b])]\n    return reduced\n\n# inputs\nx = tf.convert_to_tensor(np.ones([1, 2]), dtype=tf.float32)\ny = tf.convert_to_tensor(np.array([1]))\n# params\nw = tf.Variable(tf.random.normal([2, 2]), dtype=tf.float32)\nb = tf.Variable(tf.zeros([1, 2]), dtype=tf.float32)\n\nloss_val = forward_and_backward(x, y, w, b)\n\nwith writer.as_default():\n    tf.summary.trace_export(\n        name='NN',\n        step=0,\n        profiler_outdir=logdir)\n\n%tensorboard --logdir logs/\n</code></pre>\n\n<h3>3. Using <code>tf.keras</code> API:</h3>\n\n<pre class=\"lang-py prettyprint-override\"><code>%load_ext tensorboard.notebook\nimport tensorflow as tf\nimport numpy as np\nx_train = [np.ones((1, 2))]\ny_train = [np.ones(1)]\n\nmodel = tf.keras.models.Sequential([tf.keras.layers.Dense(2, input_shape=(2, ))])\n\nmodel.compile(\n    optimizer='sgd',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy'])\n\nlogdir = \"logs/\"\n\ntensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=logdir)\n\nmodel.fit(x_train,\n          y_train,\n          batch_size=1,\n          epochs=1,\n          callbacks=[tensorboard_callback])\n\n%tensorboard --logdir logs/\n</code></pre>\n\n<p>These examples will produce something like this below the cell:</p>\n\n<p><a href=\"https://i.stack.imgur.com/JsFT5.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/JsFT5.png\" alt=\"enter image description here\"></a></p>\n"}, {"title": "using ipdb to debug python code in one cell (jupyter or Ipython)", "question_body": "<p>I'm using jupyter (or Ipython) notebook with firefox, and want to debug some python code in the cell. I am using 'import ipdb; ipdb.set_trace()' as kind of breakpoint, for example my cell has the following code: </p>\n\n<pre><code>a=4\nimport ipdb; ipdb.set_trace()\nb=5\nprint a\nprint b\n</code></pre>\n\n<p>which after execution with Shift+Enter gives me this error:</p>\n\n<pre><code>--------------------------------------------------------------------------\nMultipleInstanceError                     Traceback (most recent call last)\n&lt;ipython-input-1-f2b356251c56&gt; in &lt;module&gt;()\n      1 a=4\n----&gt; 2 import ipdb; ipdb.set_trace()\n      3 b=5\n      4 print a\n      5 print b\n\n/home/nnn/anaconda/lib/python2.7/site-packages/ipdb/__init__.py in &lt;module&gt;()\n     14 # You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.\n     15 \n---&gt; 16 from ipdb.__main__ import set_trace, post_mortem, pm, run, runcall, runeval, launch_ipdb_on_exception\n     17 \n     18 pm                       # please pyflakes\n\n/home/nnn/anaconda/lib/python2.7/site-packages/ipdb/__main__.py in &lt;module&gt;()\n     71         # the instance method will create a new one without loading the config.\n     72         # i.e: if we are in an embed instance we do not want to load the config.\n---&gt; 73         ipapp = TerminalIPythonApp.instance()\n     74         shell = get_ipython()\n     75         def_colors = shell.colors\n\n/home/nnn/anaconda/lib/python2.7/site-packages/traitlets/config/configurable.pyc in instance(cls, *args, **kwargs)\n    413             raise MultipleInstanceError(\n    414                 'Multiple incompatible subclass instances of '\n--&gt; 415                 '%s are being created.' % cls.__name__\n    416             )\n    417 \n\nMultipleInstanceError: Multiple incompatible subclass instances of TerminalIPythonApp are being created.\n</code></pre>\n\n<p>The same error appears if I use this code not in the jupyter notebook in the browser, but in jupyter qtconsole. \nWhat does this error mean and what to do to avoid it? \nIs it possible to debug code in the cell step-by-step, using next, continue, etc commands of pdb debugger?</p>\n", "link": "https://stackoverflow.com/questions/35613249/using-ipdb-to-debug-python-code-in-one-cell-jupyter-or-ipython", "question_id": 35613249, "accepted_answer_id": 35773311, "answer_body": "<p>Had this problem also and it seems to be related to versions of jupyter and ipdb.</p>\n\n<p>Solution is to use this instead of the ipdb library <code>set_trace</code> call:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>from IPython.core.debugger import Tracer\nTracer()() #this one triggers the debugger\n</code></pre>\n\n<p>Source: <a href=\"http://devmartin.com/blog/2014/10/trigger-ipdb-within-ipython-notebook/\" rel=\"noreferrer\">http://devmartin.com/blog/2014/10/trigger-ipdb-within-ipython-notebook/</a></p>\n\n<p>Annotated screenshot:\n<a href=\"https://i.stack.imgur.com/dlam9.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/dlam9.png\" alt=\"screenshot illustrate how Tracer()() will cause Jupyter notebook to react. It pauses execution on the line in your code where you Trace()() and a new &quot;inline&quot; input accepts ipdb commands like &#39;p&#39; or &#39;n&#39; or &#39;c&#39;, shown here\"></a></p>\n"}, {"title": "How do I set up Jupyter/IPython Notebook for Django?", "question_body": "<p>I have been using the method described in <a href=\"https://andrewbrookins.com/python/using-ipython-notebook-with-django/\" rel=\"nofollow noreferrer\">this post</a> for setting up IPython Notebook to play nicely with Django. The gist of the method is to create an IPython extension which sets the DJANGO_SETTINGS_MODULE and runs django.setup() when IPython starts.</p>\n\n<p>The code for the extension is:</p>\n\n<pre><code>def load_ipython_extension(ipython):\n    # The `ipython` argument is the currently active `InteractiveShell`\n    # instance, which can be used in any way. This allows you to register\n    # new magics or aliases, for example.\n    try:\n        import os\n        os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"settings\")\n        import django\n        django.setup()\n    except ImportError:\n        pass\n</code></pre>\n\n<p>With a recent upgrade to Jupyter Notebook this setup is now broken for me. I am able to run Django code in the Jupyter notebook by adding a similar bit of code to the first cell of the notebook. However, I was not able to figure out how to get Jupyter to run the extension automatically so I would not have to do this again for each and every notebook I am creating.</p>\n\n<p>What should I do to get Django and Jupyter to play nicely?</p>\n\n<p><strong>UPDATE:</strong>\nFor @DarkLight - I am using Django 1.8.5 with Jupyter 1.0.0. The code I run in the notebook is:</p>\n\n<pre><code>import os, sys\nsys.path.insert(0, '/path/to/project')\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"settingsfile\")\nimport django\ndjango.setup()\n</code></pre>\n", "link": "https://stackoverflow.com/questions/35483328/how-do-i-set-up-jupyter-ipython-notebook-for-django", "question_id": 35483328, "accepted_answer_id": 52214033, "answer_body": "<p>Just for completeness (but it's 2018, so maybe things changed since this question was posted): you can actually install a Jupyter Python kernel in your Django environment that will then connect (run under) a different Jupyter server/environment (one where you've installed widgets, extensions, changed the theme, etc.). <code>django_extensions</code> right now still does only part of the required work :-)</p>\n\n<p>This assumes you have a Jupyter virtual environment that's separate from Django's one and whose kernels/extensions are installed with <code>--user</code>. All the Jupyter extensions (and their dependencies) are installed in this venv instead of the Django's one/ones (you'll still need pandas, matplotlib, etc. in the Django environment if you need to use them together with Django code).</p>\n\n<p>In your Django virtual environment (that can run a different version of Python, including a version 2 interpreter) install the ipython kernel:</p>\n\n<pre><code>pip install -U ipykernel\nipython kernel install --user --name='environment_name' --display-name='Your Project'\n</code></pre>\n\n<p>This will create a kernel configuration directory with the specified -\u2013name in your user\u2019s Jupyter kernel directory (on Linux it's <code>~/.jupyter/</code> while on OSX it\u2019s <code>~/Library/Jupyter/</code>) containing its kernel.json file and images/icons (by default the default Jupyter icon for the kernel we\u2019re installing are used). This kernel will run inside the virtual environment what was active at creation, thus using the exact same version of python and all the installed modules used by our Django project.</p>\n\n<p>Running <code>./manage.py shell_plus --notebook</code> does something very similar, but in addition to requiring everything (including the Jupyter server and all the extensions) installed in the current venv, it\u2019s also unable to run notebooks in directories different from the project\u2019s root (the one containing <code>./manage.py</code>). In addition it\u2019ll run the kernel using the first executable called python it finds on the path, not the virtual environment\u2019s one, making it misbehave when not started from the command line inside an active Django virtual environment.</p>\n\n<p>To fix these problems so that we're able to create a Notebook running inside any Django project we have so configured and to be able to run notebooks stored anywhere on the filesystem, we need to:</p>\n\n<ol>\n<li>make sure the first \u2018argv\u2019 parameter contains the full path to the python interpreter contained in the virtual environment</li>\n<li>add (if not already present) an \u2018env\u2019 section that will contain shell environment variables, then use these to tell Python where to find our project and which Django settings it should use. We do this by adding something like the following:</li>\n</ol>\n\n<pre><code>   \"env\": {\n      \"DJANGO_SETTINGS_MODULE\": \"my_project.settings\",\n      \"PYTHONPATH\": \"$PYTHONPATH:/home/projectuser/projectfolder/my_project\"\n   }\n</code></pre>\n\n<ol start=\"3\">\n<li>optional: change \u2018display_name\u2019 to be human friendly and replace the icons.</li>\n</ol>\n\n<p>editing this environment kernel.json file you'll see something similar:</p>\n\n<pre><code>{\n \"display_name\": \"My Project\", \n \"language\": \"python\", \n \"env\": {\n  \"DJANGO_SETTINGS_MODULE\": \"my_project.settings\",\n  \"PYTHONPATH\": \"$PYTHONPATH:/home/projectuser/projectfolder/my_project\"\n },\n \"argv\": [\n  \"/home/projectuser/.pyenv/versions/2.7.15/envs/my_project_venv/bin/python\", \n  \"-m\", \n  \"ipykernel_launcher\", \n  \"-f\", \n  \"{connection_file}\",\n  \"--ext\",\n  \"django_extensions.management.notebook_extension\"\n ]\n}\n</code></pre>\n\n<p>Notable lines:</p>\n\n<ul>\n<li><p><strong>\"DJANGO_SETTINGS_MODULE\": \"my_project.settings\"</strong>: your settings, usually as seen inside your project's manage.py</p></li>\n<li><p><strong>\"PYTHONPATH\": \"$PYTHONPATH:/home/projectuser/projectfolder/my_project\"</strong>: PYTHONPATH is extended to include your project's main directory (the one containing manage.py) so that settings can be found even if the kernel isn't run in that exact directory (here django_extensions will use a generic <code>python</code>, thus running the wrong virtual environment unless the whole Jupyter server is launched from inside it: adding this to the kernel.json created by django_extensions will enable it to run notebooks anywhere in the Django project directory)</p></li>\n<li><p><strong>\"/home/projectuser/.pyenv/versions/2.7.15/envs/my_project_venv/bin/python\"</strong>: first argument (argv list) of the kernel execution, should be the full path to your project's virtual environment's python interpreter (this is another thing django_extensions gets wrong: fixing this will allow any notebook server to run that specific Django environment's kernel with all its installed modules)</p></li>\n<li><p><strong>\"django_extensions.management.notebook_extension\"</strong>: this is the extension that will load the 'shell_plus' functionality in the notebook (optional but useful :-) )</p></li>\n</ul>\n"}]