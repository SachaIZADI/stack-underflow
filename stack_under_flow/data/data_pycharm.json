[{"title": "Unresolved reference issue in PyCharm", "question_body": "<p>I have a directory structure</p>\n\n<pre><code>\u251c\u2500\u2500 simulate.py\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 networkAlgorithm.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ...\n</code></pre>\n\n<p>And I can access the network module with <code>sys.path.insert()</code>.    </p>\n\n<pre><code>import sys\nimport os.path\nsys.path.insert(0, \"./src\")\nfrom networkAlgorithm import *\n</code></pre>\n\n<p>However, pycharm complains that it cannot access the module. How can I teach pycham to resolve the reference?</p>\n\n<p><img src=\"https://i.stack.imgur.com/VwqcZ.png\" alt=\"enter image description here\"></p>\n", "link": "https://stackoverflow.com/questions/21236824/unresolved-reference-issue-in-pycharm", "question_id": 21236824, "accepted_answer_id": 21241988, "answer_body": "<p>Manually adding it as you have done <em>is</em> indeed one way of doing this, but there is a simpler method, and that is by simply telling pycharm that you want to add the <code>src</code> folder as a source root, and then adding the sources root to your python path.</p>\n\n<p>This way, you don't have to hard code things into your interpreter's settings:</p>\n\n<ul>\n<li>Add <code>src</code> as a source content root:</li>\n</ul>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"https://i.stack.imgur.com/9WunC.png\" alt=\"enter image description here\"></p>\n\n<ul>\n<li>Then make sure to add add sources to your <code>PYTHONPATH</code>:</li>\n</ul>\n\n<p><img src=\"https://i.stack.imgur.com/rk59O.png\" alt=\"enter image description here\"></p>\n\n<ul>\n<li>Now imports will be resolved:</li>\n</ul>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"https://i.stack.imgur.com/4Z6RD.png\" alt=\"enter image description here\"></p>\n\n<p>This way, you can add whatever you want as a source root, and things will simply work. If you unmarked it as a source root however, you <em>will</em> get an error:</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"https://i.stack.imgur.com/vMII4.png\" alt=\"enter image description here\"></p>\n"}, {"title": "How to make PyCharm always show line numbers", "question_body": "<p>I cannot seem to be able to find the setting to enable line numbers for <em>all</em> files, but I have to always right click and enable this on per file basis. </p>\n\n<p>There must be a global setting for this, right?</p>\n", "link": "https://stackoverflow.com/questions/10187228/how-to-make-pycharm-always-show-line-numbers", "question_id": 10187228, "accepted_answer_id": 10187285, "answer_body": "<p>Version 2.6 and above:<br>\nPyCharm (far left menu) -> Preferences... -> Editor (bottom left section) -> General -> Appearance -> Show line numbers checkbox</p>\n\n<p><a href=\"https://i.stack.imgur.com/aeNGC.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/aeNGC.png\" alt=\"enter image description here\"></a></p>\n\n<p>Version 2.5 and below:<br>\nSettings -> Editor -> General -> Appearance -> Show line numbers checkbox</p>\n"}, {"title": "PyCharm shows unresolved references error for valid code", "question_body": "<p>I am using PyCharm to work on a project.  The project is opened and configured with an interpreter, and can run successfully.  The remote interpreter paths are mapped properly.  This seems to be the correct configuration, but PyCharm is highlighting my valid code with \"unresolved reference\" errors, even for built-in Python functions.  Why don't these seem to be detected, even though the code runs?  Is there any way to get PyCharm to recognize these correctly?</p>\n\n<hr>\n\n<p><em>This specific instance of the problem is with a remote interpreter, but the problem appears on local interpreters as well.</em></p>\n", "link": "https://stackoverflow.com/questions/11725519/pycharm-shows-unresolved-references-error-for-valid-code", "question_id": 11725519, "accepted_answer_id": 11773462, "answer_body": "<p>File | Invalidate Caches... and restarting PyCharm helps.</p>\n"}, {"title": "How do I specify that the return type of a method is the same as the class itself?", "question_body": "<p>I have the following code in python 3:</p>\n\n<pre><code>class Position:\n\n    def __init__(self, x: int, y: int):\n        self.x = x\n        self.y = y\n\n    def __add__(self, other: Position) -&gt; Position:\n        return Position(self.x + other.x, self.y + other.y)\n</code></pre>\n\n<p>But my editor (PyCharm) says that the reference Position can not be resolved (in the <code>__add__</code> method). How should I specify that I expect the return type to be of type <code>Position</code>?</p>\n\n<p>Edit: I think this is actually a PyCharm issue. It actually uses the information in its warnings, and code completion</p>\n\n<p><img src=\"https://i.imgur.com/yjjCWw3.png\" alt=\"\"></p>\n\n<p>But correct me if I'm wrong, and need to use some other syntax.</p>\n", "link": "https://stackoverflow.com/questions/33533148/how-do-i-specify-that-the-return-type-of-a-method-is-the-same-as-the-class-itsel", "question_id": 33533148, "accepted_answer_id": 33533514, "answer_body": "<p><strong>TL;DR</strong>: if you are using Python 4.0 it just works. As of today (2019) in 3.7+ you must turn this feature on using a future statement (<code>from __future__ import annotations</code>) - for Python 3.6 or below use a string. </p>\n\n<p>I guess you got this exception:</p>\n\n<pre><code>NameError: name 'Position' is not defined\n</code></pre>\n\n<p>This is because <code>Position</code> must be defined before you can use it in an annotation unless you are using Python 4.</p>\n\n<h1>Python 3.7+: <code>from __future__ import annotations</code></h1>\n\n<p>Python 3.7 introduces <a href=\"https://www.python.org/dev/peps/pep-0563/\" rel=\"noreferrer\">PEP 563: postponed evaluation of annotations</a>. A module that uses the future statement <code>from __future__ import annotations</code> will store annotations as strings automatically:</p>\n\n<pre><code>from __future__ import annotations\n\nclass Position:\n    def __add__(self, other: Position) -&gt; Position:\n        ...\n</code></pre>\n\n<p>This is scheduled to become the default in Python 4.0. Since Python still is a dynamically typed language so no type checking is done at runtime, typing annotations should have no performance impact, right? Wrong! Before python 3.7 the typing module used to be <a href=\"https://www.python.org/dev/peps/pep-0560/#performance\" rel=\"noreferrer\">one of the slowest python modules in core</a> so <strong>if you <code>import typing</code> you will see <a href=\"https://docs.python.org/3.7/whatsnew/3.7.html#pep-560-core-support-for-typing-module-and-generic-types\" rel=\"noreferrer\">up to 7 times increase in performance</a> when you upgrade to 3.7.</strong></p>\n\n<h1>Python &lt;3.7: use a string</h1>\n\n<p><a href=\"https://www.python.org/dev/peps/pep-0484/#forward-references\" rel=\"noreferrer\">According to PEP 484</a>, you should use a string instead of the class itself:</p>\n\n<pre><code>class Position:\n    ...\n    def __add__(self, other: 'Position') -&gt; 'Position':\n       ...\n</code></pre>\n\n<p>If you use the Django framework this may be familiar as Django models also use strings for forward references (foreign key definitions where the foreign model is <code>self</code> or is not declared yet). This should work with Pycharm and other tools.</p>\n\n<h1>Sources</h1>\n\n<p>The relevant parts of <a href=\"https://www.python.org/dev/peps/pep-0484/#forward-references\" rel=\"noreferrer\">PEP 484</a> and <a href=\"https://www.python.org/dev/peps/pep-0563/\" rel=\"noreferrer\">PEP 563</a>, to spare you the trip:</p>\n\n<blockquote>\n  <h1>Forward references</h1>\n  \n  <p>When a type hint contains names that have not been defined yet, that definition may be expressed as a string literal, to be resolved later.</p>\n  \n  <p>A situation where this occurs commonly is the definition of a container class, where the class being defined occurs in the signature of some of the methods. For example, the following code (the start of a simple binary tree implementation) does not work:</p>\n</blockquote>\n\n<pre><code>class Tree:\n    def __init__(self, left: Tree, right: Tree):\n    self.left = left\n    self.right = right\n</code></pre>\n\n<blockquote>\n  <p>To address this, we write:</p>\n</blockquote>\n\n<pre><code>class Tree:\n    def __init__(self, left: 'Tree', right: 'Tree'):\n        self.left = left\n        self.right = right\n</code></pre>\n\n<blockquote>\n  <p>The string literal should contain a valid Python expression (i.e., compile(lit, '', 'eval') should be a valid code object) and it should evaluate without errors once the module has been fully loaded. The local and global namespace in which it is evaluated should be the same namespaces in which default arguments to the same function would be evaluated.</p>\n</blockquote>\n\n<p>and PEP 563:</p>\n\n<blockquote>\n  <p>In Python 4.0, function and variable annotations will no longer be evaluated at definition time. Instead, a string form will be preserved in the respective <code>__annotations__</code> dictionary. Static type checkers will see no difference in behavior, whereas tools using annotations at runtime will have to perform postponed evaluation.</p>\n  \n  <p>...</p>\n  \n  <p>The functionality described above can be enabled starting from Python 3.7 using the following special import:</p>\n</blockquote>\n\n<pre><code>from __future__ import annotations\n</code></pre>\n\n<h1>Things that you may be tempted to do instead</h1>\n\n<h2>A. Define a dummy <code>Position</code></h2>\n\n<p>Before the class definition, place a dummy definition:</p>\n\n<pre><code>class Position(object):\n    pass\n\n\nclass Position(object):\n    ...\n</code></pre>\n\n<p>This will get rid of the <code>NameError</code> and may even look OK:</p>\n\n<pre><code>&gt;&gt;&gt; Position.__add__.__annotations__\n{'other': __main__.Position, 'return': __main__.Position}\n</code></pre>\n\n<p>But is it?</p>\n\n<pre><code>&gt;&gt;&gt; for k, v in Position.__add__.__annotations__.items():\n...     print(k, 'is Position:', v is Position)                                                                                                                                                                                                                  \nreturn is Position: False\nother is Position: False\n</code></pre>\n\n<h1>B. Monkey-patch in order to add the annotations:</h1>\n\n<p>You may want to try some Python meta programming magic and write a decorator\nto monkey-patch the class definition in order to add annotations:</p>\n\n<pre><code>class Position:\n    ...\n    def __add__(self, other):\n        return self.__class__(self.x + other.x, self.y + other.y)\n</code></pre>\n\n<p>The decorator should be responsible for the equivalent of this:</p>\n\n<pre><code>Position.__add__.__annotations__['return'] = Position\nPosition.__add__.__annotations__['other'] = Position\n</code></pre>\n\n<p>At least it seems right:</p>\n\n<pre><code>&gt;&gt;&gt; for k, v in Position.__add__.__annotations__.items():\n...     print(k, 'is Position:', v is Position)                                                                                                                                                                                                                  \nreturn is Position: True\nother is Position: True\n</code></pre>\n\n<p>Probably too much trouble.</p>\n\n<h1>Conclusion</h1>\n\n<p>If you are using 3.6 or below use a string literal containing the class name, in 3.7 use <code>from __future__ import annotations</code> and it will just work. </p>\n"}, {"title": "How to navigate through the source code by parts in CamelCase (instead of whole words)?", "question_body": "<p>I remember when I was using Eclipse that when holding CTRL and using left or right arrows Eclipse would navigate over the <code>LongCamelCaseWrittenWord</code> in several steps. One camel case word at time.</p>\n\n<p>So it will go like follows (pipe <code>|</code> represents the actual cursor position):</p>\n\n<pre><code>|LongCamelCaseWrittenWord -&gt; CTRL+RIGHT_ARROW -&gt;\nLong|CamelCaseWrittenWord -&gt; CTRL+RIGHT_ARROW -&gt;\nLongCamel|CaseWrittenWord -&gt; CTRL+RIGHT_ARROW -&gt;\nLongCamelCase|WrittenWord -&gt; CTRL+RIGHT_ARROW -&gt;\nLongCamelCaseWritten|Word -&gt; CTRL+RIGHT_ARROW -&gt;\nLongCamelCaseWrittenWord|\n</code></pre>\n\n<p>Is there a way how to achieve this in IntelliJ? Currently IntelliJ steps over the whole word at once.</p>\n\n<p>Using IntelliJ 9.0</p>\n", "link": "https://stackoverflow.com/questions/5833544/how-to-navigate-through-the-source-code-by-parts-in-camelcase-instead-of-whole", "question_id": 5833544, "accepted_answer_id": 5833725, "answer_body": "<p>Yes, enable <strong>Use \"CamelHumps\" words</strong> in <code>Settings | Editor | General | Smart Keys</code>.</p>\n"}, {"title": "How do I set the maximum line length in PyCharm?", "question_body": "<p>I am using PyCharm on Windows and want to change the settings to limit the maximum line length to <code>79</code> characters, as opposed to the default limit of <code>120</code> characters.</p>\n\n<p>Where can I change the maximum amount of characters per line in PyCharm?</p>\n", "link": "https://stackoverflow.com/questions/17319422/how-do-i-set-the-maximum-line-length-in-pycharm", "question_id": 17319422, "accepted_answer_id": 17319775, "answer_body": "<p>Here is screenshot of my Pycharm. Required settings is in following path: <code>File -&gt; Settings -&gt; Editor -&gt; Code Style -&gt; General: Right margin (columns)</code></p>\n\n<p><a href=\"https://i.stack.imgur.com/V3BLg.png\"><img src=\"https://i.stack.imgur.com/V3BLg.png\" alt=\"Pycharm 4 Settings Screenshot\"></a></p>\n"}, {"title": "PyCharm: &quot;Simplify Chained Comparison&quot;", "question_body": "<p>I have an integer value <code>x</code>, and I need to check if it is between a <code>start</code> and <code>end</code> values, so I write the following statements:</p>\n\n<pre><code>if x &gt;= start and x &lt;= end:\n    # do stuff\n</code></pre>\n\n<p>This statement gets underlined, and the tooltip tells me that I must </p>\n\n<blockquote>\n  <p>simplify chained comparison</p>\n</blockquote>\n\n<p>As far as I can tell, that comparison is about as simple as they come.  What have I missed here?</p>\n", "link": "https://stackoverflow.com/questions/26502775/pycharm-simplify-chained-comparison", "question_id": 26502775, "accepted_answer_id": 26502847, "answer_body": "<p>In Python you can <a href=\"https://docs.python.org/2/reference/expressions.html#comparisons\" rel=\"noreferrer\">\"chain\" comparison operations</a> which just means they are \"and\"ed together.  In your case, it'd be like this:</p>\n\n<pre><code>if start &lt;= x &lt;= end:\n</code></pre>\n\n<p>Reference: <a href=\"https://docs.python.org/3/reference/expressions.html#comparisons\" rel=\"noreferrer\">https://docs.python.org/3/reference/expressions.html#comparisons</a></p>\n"}, {"title": "Is there a difference between using a dict literal and a dict constructor?", "question_body": "<p>Using PyCharm, I noticed it offers to convert a <strong>dict literal</strong>:</p>\n\n<pre><code>d = {\n    'one': '1',\n    'two': '2',\n}\n</code></pre>\n\n<p></p></p>\n\n<p>into a <strong>dict constructor</strong>:</p>\n\n<pre><code>d = dict(one='1', two='2')\n</code></pre>\n\n<p></p></p>\n\n<p><strong>Do these different approaches differ in some significant way?</strong></p>\n\n<p>(While writing this question I noticed that using <code>dict()</code> it seems impossible to specify a numeric key .. <code>d = {1: 'one', 2: 'two'}</code> is possible, but, obviously, <code>dict(1='one' ...)</code> is not. Anything else?)</p>\n", "link": "https://stackoverflow.com/questions/6610606/is-there-a-difference-between-using-a-dict-literal-and-a-dict-constructor", "question_id": 6610606, "accepted_answer_id": 6610783, "answer_body": "<p>I think you have pointed out the most obvious difference. Apart from that, </p>\n\n<p>the first doesn't need to lookup <code>dict</code> which should make it a tiny bit faster </p>\n\n<p>the second looks up <code>dict</code> in <code>locals()</code> and then <code>globals()</code> and the finds the builtin, so you can switch the behaviour by defining a local called <code>dict</code> for example although I can't think of anywhere this would be a good idea apart from maybe when debugging</p>\n"}, {"title": "Why does Pycharm&#39;s inspector complain about &quot;d = {}&quot;?", "question_body": "<p>When initializing a dictionary with <code>d = {}</code> Pycharm's code inspector generates a warning, saying</p>\n\n<blockquote>\n  <p>This dictionary creation could be rewritten as a dictionary literal.</p>\n</blockquote>\n\n<p>If I rewrite it <code>d = dict()</code> the warning goes away. Since <code>{}</code> already <em>is</em> a dictionary literal, I'm pretty sure the message is erroneous. Furthermore, it seems like both <code>d = {}</code> and <code>d = dict()</code> are valid and Pythonic. </p>\n\n<p>This related question seems to conclude that the choice is just a matter of style/preference:\n<a href=\"https://stackoverflow.com/questions/2745008/differences-between-d-dict-and-d\">differences between &quot;d = dict()&quot; and &quot;d = {}&quot;</a></p>\n\n<p>Why would Pycharm complain about <code>d = {}</code>?</p>\n\n<p><em>UPDATE:</em></p>\n\n<p>Mac nailed it. The warning actually applied to multiple lines, not just the one that was flagged.</p>\n\n<p>Pycharm seems to look for a sequence of consecutive statements where you initialize a dictionary and then set values in the dictionary. For example, this will trigger the warning:</p>\n\n<pre><code>d = {}\nd['a'] = 1\n</code></pre>\n\n<p>But this code will not:</p>\n\n<pre><code>d = {}\npass\nd['a'] = 1\n</code></pre>\n", "link": "https://stackoverflow.com/questions/8406242/why-does-pycharms-inspector-complain-about-d", "question_id": 8406242, "accepted_answer_id": 8406391, "answer_body": "<p><strong>What is the following code to your dictionary declaration?</strong></p>\n\n<p>I think pycharm will trigger the error if you have something like:</p>\n\n<pre><code>dic = {}\ndic['aaa'] = 5\n</code></pre>\n\n<p>as you could have written</p>\n\n<pre><code>dic = {'aaa': 5}\n</code></pre>\n\n<p>BTW: The fact that the error goes away if you use the function doesn't necessarily mean that pycharm believes <code>dict()</code> is a literal. It could just mean that it doesn't complain for:</p>\n\n<pre><code>dic = dict()\ndic['aaa'] = 5\n</code></pre>\n\n<p>HTH!</p>\n"}, {"title": "How bad is shadowing names defined in outer scopes?", "question_body": "<p>I just switched to Pycharm and I am very happy about all the warnings and hints it provides me to improve my code. Except for this one which I don't understand:</p>\n\n<p><code>This inspection detects shadowing names defined in outer scopes.</code></p>\n\n<p>I know it is bad practice to access variable from the outer scope but what is the problem with shadowing the outer scope?</p>\n\n<p>Here is one example, where Pycharm gives me the warning message:</p>\n\n<pre><code>data = [4, 5, 6]\n\ndef print_data(data): # &lt;-- Warning: \"Shadows 'data' from outer scope\n    print data\n\nprint_data(data)\n</code></pre>\n", "link": "https://stackoverflow.com/questions/20125172/how-bad-is-shadowing-names-defined-in-outer-scopes", "question_id": 20125172, "accepted_answer_id": 20125739, "answer_body": "<p>No big deal in your above snippet, but imagine a function with a few more arguments and quite a few more lines of code. Then you decide to rename your <code>data</code> argument as <code>yadda</code> but miss one of the places it is used in the function's body... Now <code>data</code> refers to the global, and you start having weird behaviour - where you would have a much more obvious <code>NameError</code> if you didn't have a global name <code>data</code>. </p>\n\n<p>Also remember that in Python everything is an object (including modules, classes and functions) so there's no distinct namespaces for functions, modules or classes. Another scenario is that you import function <code>foo</code> at the top of your module, and use it somewhere in your function body. Then you add a new argument to your function and named it - bad luck - <code>foo</code>. </p>\n\n<p>Finally, built-in functions and types also live in the same namespace and can be shadowed the same way.</p>\n\n<p>None of this is much of a problem if you have short functions, good naming and a decent unittest coverage, but well, sometimes you have to maintain less than perfect code and being warned about such possible issues might help.</p>\n"}, {"title": "How do I import modules in pycharm?", "question_body": "<p>In <em>PyCharm</em>, I've added the Python environment <code>/usr/bin/python</code>. However,</p>\n\n<pre><code>from gnuradio import gr\n</code></pre>\n\n<p>fails as an <em>undefined reference</em>. However, it works fine in the Python interpreter from the command line. </p>\n\n<p>GNURadio works fine with python outside of Pycharm. Everything is installed and configured how I want it.</p>\n\n<p>Gnuradio is located at <code>/usr/local/lib/python2.7/site-packages/gnuradio</code></p>\n\n<p>Also:</p>\n\n<blockquote>\n  <p>PYTHONPATH=/usr/local/lib/python2.7/site-packages:/usr/local/lib/python2.7/site-packages/gnuradio</p>\n</blockquote>\n", "link": "https://stackoverflow.com/questions/19885821/how-do-i-import-modules-in-pycharm", "question_id": 19885821, "accepted_answer_id": 19885882, "answer_body": "<h2>Adding a Path</h2>\n\n<p>Go into File \u2192 Settings \u2192 Project Settings \u2192 Project Interpreter.</p>\n\n<p>Then press configure interpreter, and navigate to the \"Paths\" tab.</p>\n\n<p><img src=\"https://i.imgur.com/Q5pcWDX.jpg\" alt=\"pycharm path tab\"></p>\n\n<p>Press the + button in the Paths area.  You can put the path to the module you'd like it to recognize. </p>\n\n<h3>But I don't know the path..</h3>\n\n<p>Open the python interpreter where you can import the module.</p>\n\n<pre><code>&gt;&gt; import gnuradio\n&gt;&gt; gnuradio.__file__\n\"path/to/gnuradio\"\n</code></pre>\n\n<p>Most commonly you'll have a folder structure like this:</p>\n\n<pre><code>foobarbaz/\n  gnuradio/\n    __init__.py\n    other_file.py\n</code></pre>\n\n<p>You want to add foobarbaz to the path here.</p>\n"}, {"title": "How can I tell PyCharm what type a parameter is expected to be?", "question_body": "<p>When it comes to constructors, and assignments, and method calls, the PyCharm IDE is pretty good at analyzing my source code and figuring out what type each variable should be. I like it when it's right, because it gives me good code-completion and parameter info, and it gives me warnings if I try to access an attribute that doesn't exist.</p>\n\n<p>But when it comes to parameters, it knows nothing. The code-completion dropdowns can't show anything, because they don't know what type the parameter will be. The code analysis can't look for warnings.</p>\n\n<pre><code>class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\npeasant = Person(\"Dennis\", 37)\n# PyCharm knows that the \"peasant\" variable is of type Person\npeasant.dig_filth()   # shows warning -- Person doesn't have a dig_filth method\n\nclass King:\n    def repress(self, peasant):\n        # PyCharm has no idea what type the \"peasant\" parameter should be\n        peasant.knock_over()   # no warning even though knock_over doesn't exist\n\nKing().repress(peasant)\n# Even if I call the method once with a Person instance, PyCharm doesn't\n# consider that to mean that the \"peasant\" parameter should always be a Person\n</code></pre>\n\n<p>This makes a certain amount of sense. Other call sites could pass anything for that parameter. But if my method expects a parameter to be of type, say, <code>pygame.Surface</code>, I'd like to be able to indicate that to PyCharm somehow, so it can show me all of <code>Surface</code>'s attributes in its code-completion dropdown, and highlight warnings if I call the wrong method, and so on.</p>\n\n<p>Is there a way I can give PyCharm a  hint, and say \"psst, this parameter is supposed to be of type X\"? (Or perhaps, in the spirit of dynamic languages, \"this parameter is supposed to quack like an X\"? I'd be fine with that.)</p>\n\n<hr>\n\n<p><strong>EDIT:</strong> CrazyCoder's answer, below, does the trick. For any newcomers like me who want the quick summary, here it is:</p>\n\n<pre><code>class King:\n    def repress(self, peasant):\n        \"\"\"\n        Exploit the workers by hanging on to outdated imperialist dogma which\n        perpetuates the economic and social differences in our society.\n\n        @type peasant: Person\n        @param peasant: Person to repress.\n        \"\"\"\n        peasant.knock_over()   # Shows a warning. And there was much rejoicing.\n</code></pre>\n\n<p>The relevant part is the <code>@type peasant: Person</code> line of the docstring.</p>\n\n<p>If you also go to File > Settings > Python Integrated Tools and set \"Docstring format\" to \"Epytext\", then PyCharm's View > Quick Documentation Lookup will pretty-print the parameter information instead of just printing all the @-lines as-is.</p>\n", "link": "https://stackoverflow.com/questions/6318814/how-can-i-tell-pycharm-what-type-a-parameter-is-expected-to-be", "question_id": 6318814, "accepted_answer_id": 6318911, "answer_body": "<p>Yes, you can use special documentation format for methods and their parameters so that PyCharm can know the type. Recent PyCharm version <a href=\"http://blogs.jetbrains.com/pycharm/2011/06/pycharm-1-5-released-documentation-sqldatabase-django-templates-debugging-and-more/\" rel=\"noreferrer\">supports most common doc formats</a>.</p>\n\n<p>For example, PyCharm extracts types from <a href=\"http://epydoc.sourceforge.net/manual-epytext.html\" rel=\"noreferrer\">@param style comments</a>.</p>\n\n<p>See also <a href=\"http://docutils.sourceforge.net/rst.html\" rel=\"noreferrer\">reStructuredText</a> and <a href=\"http://www.python.org/dev/peps/pep-0257/\" rel=\"noreferrer\">docstring conventions</a> (PEP 257).</p>\n\n<p>Another option is Python 3 annotations.</p>\n\n<p>Please <a href=\"http://www.jetbrains.com/pycharm/webhelp/type-hinting-in-pycharm.html\" rel=\"noreferrer\">refer to the PyCharm documentation section</a> for more details and samples.</p>\n"}, {"title": "How do I configure PyCharm to run py.test tests?", "question_body": "<p>I want to start writing unit tests for my Python code, and the <a href=\"http://pytest.org/\" rel=\"noreferrer\">py.test</a> framework sounds like a better bet than Python's bundled <a href=\"http://docs.python.org/library/unittest.html\" rel=\"noreferrer\">unittest</a>. So I added a \"tests\" directory to my project, and added <a href=\"http://doc.pytest.org/en/latest/getting-started.html#our-first-test-run\" rel=\"noreferrer\">test_sample.py</a> to it. Now I want to configure PyCharm to run all the tests in my \"tests\" directory.</p>\n\n<p>PyCharm allegedly <a href=\"http://www.jetbrains.com/pycharm/webhelp/testing-support.html\" rel=\"noreferrer\">supports py.test</a> in its test runner. You're supposed to be able to <a href=\"http://www.jetbrains.com/pycharm/webhelp/creating-run-debug-configuration-for-tests.html\" rel=\"noreferrer\">create a run/debug configuration</a> to run your tests, and PyCharm allegedly has a <a href=\"http://www.jetbrains.com/pycharm/webhelp/run-debug-configuration-py-test.html\" rel=\"noreferrer\">\"create configuration\" dialog box specifically for py.test</a>. But that's the complete extent of their documentation on the subject, and I can't find this alleged dialog box anywhere.</p>\n\n<p>If I right-click the directory in the Project tool window, I'm <a href=\"http://www.jetbrains.com/pycharm/webhelp/creating-run-debug-configuration-for-tests.html\" rel=\"noreferrer\">supposed</a> to see a \"Create &lt;name&gt;\" menu item, but the only menu item starting with \"Create\" is \"Create Run Configuration\". Okay, maybe the documentation is just wrong, and \"Create Run Configuration\" does sound promising. Unfortunately, the only two items in its submenu are \"Unittests in C:\\mypath...\" and \"Doctests in C:\\mypath...\", neither of which applies -- I'm using neither unittest nor doctest. There is no menu item for py.test.</p>\n\n<p>If I open my test_sample.py and right-click in the editor window, I do get the promised \"Create &lt;name&gt;\" menu items: there's \"Create 'Unittests in test_sa...'...\", followed by \"Run 'Unittests in test_sa...'\" and \"Debug 'Unittests in test_sa...'\". So again, it's all specific to the unittest framework; nothing for py.test.</p>\n\n<p>If I do try the menu items that say \"unittest\", I get a dialog box with options for \"Name\", \"Type\", a \"Tests\" group box with \"Folder\" and \"Pattern\" and \"Script\" and \"Class\" and \"Function\", etc. This sounds exactly like what's documented as the dialog to add a <a href=\"http://www.jetbrains.com/pycharm/webhelp/run-debug-configuration-python-unit-test.html\" rel=\"noreferrer\">configuration for Python Unit Test</a>, and not like the \"Name\" and \"Test to run\" and \"Keywords\" options that are supposed to show up in the <a href=\"http://www.jetbrains.com/pycharm/webhelp/run-debug-configuration-py-test.html\" rel=\"noreferrer\">configuration for py.test</a> dialog. There's nothing inside the dialog to switch which test framework I'm adding.</p>\n\n<p>I'm using PyCharm 1.5.2 on Windows with Python 3.1.3 and pytest 2.0.3. I can successfully run <code>py.test</code> on my tests from the command line, so it's not something simple like pytest not being installed properly.</p>\n\n<p>How do I configure PyCharm to run my py.test tests?</p>\n", "link": "https://stackoverflow.com/questions/6397063/how-do-i-configure-pycharm-to-run-py-test-tests", "question_id": 6397063, "accepted_answer_id": 6397315, "answer_body": "<p>Please go to File | Settings | Tools | Python Integrated Tools and change the default test runner to py.test. Then you'll get the py.test option to create tests instead of the unittest one.</p>\n"}, {"title": "Why does pycharm propose to change method to static", "question_body": "<p>The new pycharm release (3.1.3 community edition) proposes to convert the methods that don't work with the current object's state to static.</p>\n\n<p><img src=\"https://i.stack.imgur.com/l0TgW.png\" alt=\"enter image description here\"></p>\n\n<p>What is the practical reason for that? Some kind of micro-performance(-or-memory)-optimization?</p>\n", "link": "https://stackoverflow.com/questions/23554872/why-does-pycharm-propose-to-change-method-to-static", "question_id": 23554872, "accepted_answer_id": null}, {"title": "How to surround selected text in PyCharm like with Sublime Text", "question_body": "<p>Is there a way to configure PyCharm to be able to surround selected code with parenthesis by just typing on the parenthesis key, like when we use SublimText 2?</p>\n", "link": "https://stackoverflow.com/questions/27152414/how-to-surround-selected-text-in-pycharm-like-with-sublime-text", "question_id": 27152414, "accepted_answer_id": 27168576, "answer_body": "<p>I think you want something like</p>\n\n<p><code>Settings | Editor | General | Smart Keys</code> -> <code>Surround selection on typing quote or brace</code></p>\n"}, {"title": "PyCharm error: &#39;No Module&#39; when trying to import own module (python script)", "question_body": "<p>I have written a module (a file <code>my_mod.py</code> file residing in the folder <code>my_module</code>).\nCurrently, I am working in the file <code>cool_script.py</code> that resides in the folder <code>cur_proj</code>. I have opened the folder in PyCharm using File -- open (and I assume, hence, it is a PyCharm project).</p>\n\n<p>In ProjectView (CMD-7), I can see my project <code>cur_proj</code> (in red) and under \"External Libraries\" I do see <code>my_module</code>. In cool_script.py, I can write </p>\n\n<pre><code>from my_module import my_mod as mm\n</code></pre>\n\n<p>and PyCharm even makes suggestion for my_mod. So far so good.</p>\n\n<p><strong>However, when I try to run cool_script.py, PyCharm tells me \n<em>\"No module named my_module\"</em></strong></p>\n\n<p>This seems strange to me, because</p>\n\n<p>A) in the terminal (OS 10.10.2), in python, I can import the module no problem -- there is a corresponding entry in the PYTHONPATH in .bashrc</p>\n\n<p>B) in PyCharm -- Settings -- Project cur_proj -- Project Interpreter -- CogWheel next to python interpreter -- more -- show paths for selected interpreter icon, the paths from PYTHONPATH do appear (as I think they should)</p>\n\n<p>Hence, why do I get the error when I try to run cool_script.py?  -- <strong>What am I missing?</strong></p>\n\n<p>Notes:</p>\n\n<ul>\n<li>I am <a href=\"https://stackoverflow.com/questions/25150355/requests-module-works-in-console-but-not-script-all-other-modules-work-normall\">not declaring a different / special python version</a> at the top of cool_script.py</li>\n<li>I made sure that <a href=\"https://stackoverflow.com/questions/19885821/how-do-i-import-modules-in-pycharm\">the path to <code>my_module</code> is correct</a></li>\n<li>I <a href=\"https://stackoverflow.com/questions/12284667/django-error-no-module-named\">put <code>__init__.py</code> files (empty files)</a> both in <code>my_module</code> and in <code>cur_proj</code></li>\n<li>I am not using <code>virtualenv</code></li>\n</ul>\n\n<h1>Addendum 2015-Feb-25</h1>\n\n<p>When I go in PyCharm to Run -- Edit Configurations, for my current project, there are two options that are selected with a check mark: \"<em>Add content roots to PYTHONPATH</em>\" and \"<em>Add source roots to PYTHONPATH</em>\". When I have both unchecked, I can load my module.</p>\n\n<p>So it works now -- <strong>but why</strong>? </p>\n\n<p>Further questions emerged:</p>\n\n<ul>\n<li>What are \"content roots\" and what are \"source roots\"? And why does adding something to the PYTHONPATH make it somehow break?</li>\n<li>should I uncheck both of those options all the time (so also in the defaults, not only the project specific configurations (left panel of the Run/Debug Configurations dialog)?</li>\n</ul>\n", "link": "https://stackoverflow.com/questions/28705029/pycharm-error-no-module-when-trying-to-import-own-module-python-script", "question_id": 28705029, "accepted_answer_id": null}, {"title": "How to select Python version in PyCharm?", "question_body": "<p>I have PyCharm 1.5.4 and have used the \"Open Directory\" option to open the contents of a folder in the IDE.</p>\n\n<p>I have Python version 3.2 selected (it shows up under the \"External Libraries\" node).</p>\n\n<p>How can I select another version of Python (that I already have installed on my machine) so that PyCharm uses that version instead?</p>\n", "link": "https://stackoverflow.com/questions/10322424/how-to-select-python-version-in-pycharm", "question_id": 10322424, "accepted_answer_id": 10322460, "answer_body": "<p>File -> Settings</p>\n\n<p>Preferences->Project Interpreter->Python Interpreters</p>\n\n<p>If it's not listed add it.</p>\n\n<p><img src=\"https://i.stack.imgur.com/0lNe3.png\" alt=\"enter image description here\"></p>\n"}, {"title": "pycharm running way slow", "question_body": "<p>I'm a big fan of <a href=\"http://www.jetbrains.com/pycharm/\" rel=\"noreferrer\">PyCharm by JetBrains</a> but I do run into some issues that I thought maybe I'll ask here about.</p>\n\n<ol>\n<li>It hangs unexpectedly and this happens often. Overall, its a little bit slow for my taste and I would love some tips on how to increase the performance of the IDE</li>\n<li>Often when I open a project PyCharm seems to flag all the built-ins as Unresolved Reference warnings. things like open(), str(), etc. as well as some of the modules I import such as sys (these are the most common offenders :) ).</li>\n</ol>\n\n<p>The only way I am able to fix (2) is by going to PyCharm -> Preferences -> Python Interpreters -> Paths -> Reload List of Paths but I have to do this often enough to warrant asking about a more permanent fix.</p>\n\n<p>My configuration:\nMac OSX Lion running on MacBook Pro (mid 2010) with 8GB RAM</p>\n\n<p>Now look, I understand that diagnosing things like these is difficult without any sort of snapshot or more information about what is going on, but I am simply asking if anyone has ran into these issues before and if so, how did these get resolved?</p>\n\n<p>Thanks!</p>\n\n<p>P.S. I have also contacted JetBrains regarding these issues, but honestly I tend to find nice solutions to common problems here and I thought I might as well ask</p>\n", "link": "https://stackoverflow.com/questions/10363526/pycharm-running-way-slow", "question_id": 10363526, "accepted_answer_id": 10363625, "answer_body": "<p>Every performance problem with PyCharm is unique, a solution that helps to one person will not work for another. The only proper way to fix your specific performance problem is by capturing the CPU profiler snapshot <a href=\"https://intellij-support.jetbrains.com/hc/articles/207241235\" rel=\"noreferrer\">as described in this document</a> and <a href=\"https://intellij-support.jetbrains.com/hc/requests/new\" rel=\"noreferrer\">sending it to PyCharm support team</a>, either by submitting a ticket or <a href=\"https://youtrack.jetbrains.com/issues/PY\" rel=\"noreferrer\">directly into the issue tracker</a>.</p>\n\n<p>After the CPU snapshot is analyzed, PyCharm team will work on a fix and release a new version which will (hopefully) not be affected by this specific performance problem. The team may also suggest you some configuration change or workaround to remedy the problem based on the analysis of the provided data.</p>\n\n<p>All the other \"solutions\" (like enabling Power Save mode and changing the highlighting level) will just hide the real problems that should be fixed.</p>\n"}, {"title": "pycharm convert tabs to spaces automatically", "question_body": "<p>I am using pycharm IDE for python development it works perfectly fine for django code so suspected that converting tabs to spaces is default behaviour, however in python IDE is giving errors everywhere because it can't convert tabs to spaces automatically is there a way to achieve this.</p>\n", "link": "https://stackoverflow.com/questions/11816147/pycharm-convert-tabs-to-spaces-automatically", "question_id": 11816147, "accepted_answer_id": 11816221, "answer_body": "<p>Change the code style to use spaces instead of tabs:</p>\n\n<p><img src=\"https://i.stack.imgur.com/g3RS7.png\" alt=\"spaces\"></p>\n\n<p>Then select a folder you want to convert in the Project View and use <code>Code</code> | <strong>Reformat Code</strong>.</p>\n"}, {"title": "How do I activate a virtualenv inside PyCharm&#39;s terminal?", "question_body": "<p>I've set up PyCharm, created my virtualenv (either through the virtual env command, or directly in PyCharm) and activated that environment as my Interpreter. Everything is working just fine.</p>\n\n<p>However, if I open a terminal using \"Tools, Open Terminal\", the shell prompt supplied is <em>not</em> using the virtual env; I still have to use <code>source ~/envs/someenv/bin/activate</code> within that Terminal to activate it.</p>\n\n<p>Another method is to activate the environment in a shell, and run PyCharm from that environment. This is \"workable\" but pretty ugly, and means I have major problems if I switch environments or projects from PyCharm: I'm now using the totally-wrong environment.</p>\n\n<p>Is there some other, much-easier way to have \"Tools, Open Terminal\" automatically activate the virtual environment?</p>\n", "link": "https://stackoverflow.com/questions/22288569/how-do-i-activate-a-virtualenv-inside-pycharms-terminal", "question_id": 22288569, "accepted_answer_id": 22289136, "answer_body": "<p><strong><em>Edit:</em></strong></p>\n\n<p>According to <a href=\"https://www.jetbrains.com/pycharm/whatsnew/#v2016-3-venv-in-terminal\" rel=\"noreferrer\">https://www.jetbrains.com/pycharm/whatsnew/#v2016-3-venv-in-terminal</a>, PyCharm 2016.3 (released Nov 2016) has virutalenv support for terminals out of the box</p>\n\n<blockquote>\n  <p>Auto virtualenv is supported for bash, zsh, fish, and Windows cmd. You\n  can customize your shell preference in Settings (Preferences) | Tools\n  | Terminal.</p>\n</blockquote>\n\n<p><hr/>\n<strong><em>Old Method:</em></strong></p>\n\n<p>Create a file <code>.pycharmrc</code> in your home folder with the following contents</p>\n\n<pre><code>source ~/.bashrc\nsource ~/pycharmvenv/bin/activate\n</code></pre>\n\n<p>Using your virtualenv path as the last parameter.</p>\n\n<p>Then set the shell Preferences->Project Settings->Shell path to</p>\n\n<pre><code>/bin/bash --rcfile ~/.pycharmrc\n</code></pre>\n"}, {"title": "Python 3 Annotations: Type hinting a list of a specified type (PyCharm)", "question_body": "<p>Using Python 3's function annotations, it is possible to specify the type of items contained within a homogeneous list (or other collection) for the purpose of type hinting in PyCharm and other IDEs?</p>\n\n<p>A pseudo-python code example for a list of int:</p>\n\n<pre><code>def my_func(l:list&lt;int&gt;):\n    pass\n</code></pre>\n\n<p><br><br>\nI know it's possible using Docstring...</p>\n\n<pre><code>def my_func(l):\n    \"\"\"\n    :type l: list[int]\n    \"\"\"\n    pass\n</code></pre>\n\n<p>... but I prefer the annotation style if it's possible.</p>\n", "link": "https://stackoverflow.com/questions/24853923/python-3-annotations-type-hinting-a-list-of-a-specified-type-pycharm", "question_id": 24853923, "accepted_answer_id": 25320495, "answer_body": "<p>Answering my own question; the TLDR answer is <strike>No</strike> <strong>Yes</strong>. </p>\n\n<p><strong>Update 2</strong></p>\n\n<p>In September 2015, Python 3.5 was released with support for Type Hints and includes a <a href=\"https://docs.python.org/3/library/typing.html\" rel=\"noreferrer\">new <em>typing</em> module</a>. This allows for the specification of types contained within collections. As of November 2015, JetBrains PyCharm 5.0 fully supports Python 3.5 to include Type Hints as illustrated below.</p>\n\n<p><a href=\"https://i.stack.imgur.com/KHn4f.jpg\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/KHn4f.jpg\" alt=\"PyCharm 5.0 Code Completion using Type Hints\"></a></p>\n\n<p><strong>Update 1</strong> </p>\n\n<p>As of May 2015, <a href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"noreferrer\">PEP0484 (Type Hints)</a> has been formally accepted. The draft implementation is also available at <a href=\"https://github.com/ambv/typehinting\" rel=\"noreferrer\">github under ambv/typehinting</a>.</p>\n\n<p><strong>Original Answer</strong></p>\n\n<p>As of Aug 2014, I have confirmed that it is not possible to use Python 3 type annotations to specify types within collections (ex: a list of strings).</p>\n\n<p>The use of formatted docstrings such as reStructuredText or Sphinx are viable alternatives and supported by various IDEs.</p>\n\n<p>It also appears that Guido is mulling over the idea of extending type annotations in the spirit of mypy: <a href=\"http://mail.python.org/pipermail/python-ideas/2014-August/028618.html\" rel=\"noreferrer\">http://mail.python.org/pipermail/python-ideas/2014-August/028618.html</a></p>\n"}, {"title": "How to use PyCharm to debug Scrapy projects", "question_body": "<p>I am working on Scrapy 0.20 with Python 2.7. I found PyCharm has a good Python debugger. I want to test my Scrapy spiders using it. Anyone knows how to do that please?</p>\n\n<h3> What I have tried</h3>\n\n<p>Actually I tried to run the spider as a scrip. As a result, I built that scrip. Then, I tried to add my Scrapy project to PyCharm as a model like this:</p>\n\n<pre><code>File-&gt;Setting-&gt;Project structure-&gt;Add content root.\n</code></pre>\n\n<p>But I don't know what else I have to do</p>\n", "link": "https://stackoverflow.com/questions/21788939/how-to-use-pycharm-to-debug-scrapy-projects", "question_id": 21788939, "accepted_answer_id": 22254926, "answer_body": "<p>The <code>scrapy</code> command is a python script which means you can start it from inside PyCharm.</p>\n\n<p>When you examine the scrapy binary (<code>which scrapy</code>) you will notice that this is actually a python script:</p>\n\n<pre><code>#!/usr/bin/python\n\nfrom scrapy.cmdline import execute\nexecute()\n</code></pre>\n\n<p>This means that a command like \n<code>scrapy crawl IcecatCrawler</code> can also be executed like this: <code>python /Library/Python/2.7/site-packages/scrapy/cmdline.py crawl IcecatCrawler</code></p>\n\n<p>Try to find the scrapy.cmdline package.\nIn my case the location was here: <code>/Library/Python/2.7/site-packages/scrapy/cmdline.py</code></p>\n\n<p>Create a run/debug configuration inside PyCharm with that script as script. Fill the script parameters with the scrapy command and spider. In this case <code>crawl IcecatCrawler</code>. </p>\n\n<p>Like this:\n<img src=\"https://i.stack.imgur.com/bcDQH.png\" alt=\"PyCharm Run/Debug Configuration\"></p>\n\n<p>Put your breakpoints anywhere in your crawling code and it should work\u2122.</p>\n"}, {"title": "Can PyCharm list all of Python errors in a project?", "question_body": "<p>I use python 2.7 in a virtual environment and PyCharm 2.7 (new build as of feb 07 2013).</p>\n\n<p>Whenever I open a python file in it that has unambiguous errors (equivalent to compile errors in other languages, e.g. using undeclared variables, calling non-existing functions), it shows red stripes in the gutter of the file.</p>\n\n<p>So, I discover errors randomly as I happened to navigate to a file that contains them. What I would really like is to be able to list all of the python errors in a separate window. The Visual Studio 2005/2008/2010/... IDE has a separate \"Errors\" view that lists all of them with file names and line numbers, and gives me the ability to click on any one of these errors and navigate directly to the source.</p>\n\n<p>Does PyCharm have anything like this?</p>\n", "link": "https://stackoverflow.com/questions/14902181/can-pycharm-list-all-of-python-errors-in-a-project", "question_id": 14902181, "accepted_answer_id": null}, {"title": "Pycharm does not show plot", "question_body": "<p>Pycharm does not show plot from the following code:</p>\n\n<pre><code>import pandas as pd\nimport numpy as np\nimport matplotlib as plt\n\nts = pd.Series(np.random.randn(1000), index=pd.date_range('1/1/2000', periods=1000))\n\nts = ts.cumsum()    \nts.plot()\n</code></pre>\n\n<p>What happens is that a window appears for less than a second, and then disappears again.</p>\n\n<p>Using the Pyzo IEP IDE (using same interpreter) on the same code the plot shows as expected.</p>\n\n<p>...So the problem must be with some setting on Pycharm.\nI've tried using both python.exe and pythonw.exe as interpreter both with same results.</p>\n\n<p>This is my sys_info:</p>\n\n<pre><code>C:\\pyzo2014a\\pythonw.exe -u C:\\Program Files (x86)\\JetBrains\\PyCharm Community Edition 3.4.1\\helpers\\pydev\\pydevconsole.py 57315 57316\nPyDev console: using IPython 2.1.0import sys; print('Python %s on %s' % (sys.version, sys.platform))\nPython 3.4.1 |Continuum Analytics, Inc.| (default, May 19 2014, 13:02:30) [MSC v.1600 64 bit (AMD64)] on win32\nsys.path.extend(['C:\\\\Users\\\\Rasmus\\\\PycharmProjects\\\\untitled2'])\nIn[3]: import IPython\nprint(IPython.sys_info())\n{'commit_hash': '681fd77',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': 'C:\\\\pyzo2014a\\\\lib\\\\site-packages\\\\IPython',\n 'ipython_version': '2.1.0',\n 'os_name': 'nt',\n 'platform': 'Windows-8-6.2.9200',\n 'sys_executable': 'C:\\\\pyzo2014a\\\\pythonw.exe',\n 'sys_platform': 'win32',\n 'sys_version': '3.4.1 |Continuum Analytics, Inc.| (default, May 19 2014, '\n                '13:02:30) [MSC v.1600 64 bit (AMD64)]'}\n</code></pre>\n", "link": "https://stackoverflow.com/questions/24886625/pycharm-does-not-show-plot", "question_id": 24886625, "accepted_answer_id": 46965602, "answer_body": "<p>Just use </p>\n\n<pre><code>plt.show()\n</code></pre>\n\n<p>It does the trick, but I don't know why.</p>\n"}, {"title": "Pycharm to toggle soft wrap in code editor", "question_body": "<p>My <a href=\"https://www.google.com.vn/#newwindow=1&amp;q=pycharm%20soft%20wrap%20for%20code%20editor&amp;rct=j\" rel=\"noreferrer\">google search</a> and <a href=\"https://stackoverflow.com/questions/34340899/is-use-soft-wraps-option-not-available-in-preferences-in-pycharm-again-ver-5\">SO search</a> give me no helpful result(s).</p>\n\n<p>Trying to look in Pycharm setting/preference not helps either.</p>\n\n<p>So, if you know to to toggle <code>soft wrap</code> aka. word wrap while editing code in Pycharm, please share.</p>\n\n<p>p.s.</p>\n\n<p>I'm using <strong>PyCharm Community Edition 2016.2</strong></p>\n", "link": "https://stackoverflow.com/questions/38585204/pycharm-to-toggle-soft-wrap-in-code-editor", "question_id": 38585204, "accepted_answer_id": 38585266, "answer_body": "<p>Right-click the the left side (with line numbering) and choose your soft wrap option:</p>\n\n<p><a href=\"https://i.stack.imgur.com/xTwsC.jpg\"><img src=\"https://i.stack.imgur.com/xTwsC.jpg\" alt=\"enter image description here\"></a></p>\n"}, {"title": "How to debug Django commands in PyCharm", "question_body": "<p>I know how to run commands with PyCharm (Tools -> Run manage.py Task), but I would like to debug them also, including my commands and third party app's commands.</p>\n", "link": "https://stackoverflow.com/questions/17141817/how-to-debug-django-commands-in-pycharm", "question_id": 17141817, "accepted_answer_id": 17355385, "answer_body": "<p>You can debug a custom Django admin/management command in PyCharm by creating a custom Django server entry on the Run/Debug Configuration menu:</p>\n\n<ul>\n<li>Click <code>Edit Configurations...</code>.</li>\n<li>Click the plus sign and choose <code>Django server</code>.</li>\n<li>Fill in the <code>Name</code> as you please, clear the <code>Host</code> and <code>Port</code> fields,\ncheck <code>Custom run command</code> and enter the name of your command to the\nright of the checkbox.</li>\n<li>Enter any extra command-line arguments into the separate field <code>Additional options</code>, not appended in the run command.  </li>\n<li>Click OK.</li>\n</ul>\n\n<p>Now set a breakpoint, choose your new configuration from the Run/Debug Configuration menu and click the Debug button.  Et voil\u00e0!</p>\n"}, {"title": "Error: Microsoft Visual C++ 10.0 is required (Unable to find vcvarsall.bat)", "question_body": "<p>Im trying to install numpy with PyCharm but i keep getting this error: </p>\n\n<blockquote>\n  <p>error: Microsoft Visual C++ 10.0 is required (Unable to find\n  vcvarsall.bat).</p>\n</blockquote>\n\n<p>Can someone please explain to me exactly what i have to do to fix this error(and as simple and detailed as possible)? im using python 3.4.2 (i know this has been answered before but i did not understand it).</p>\n", "link": "https://stackoverflow.com/questions/28251314/error-microsoft-visual-c-10-0-is-required-unable-to-find-vcvarsall-bat", "question_id": 28251314, "accepted_answer_id": 31027864, "answer_body": "<p>I got the same error and ended up using a pre-built distribution of numpy available in <a href=\"http://sourceforge.net/projects/numpy/files/NumPy/1.9.2/\">SourceForge</a>  (similarly, a distribution of <a href=\"http://sourceforge.net/projects/matplotlib/files/matplotlib/matplotlib-1.4.3/windows/\">matplotlib</a> can be obtained).</p>\n\n<p>Builds for both 32-bit 2.7 and 3.3/3.4 are available.<br>\nPyCharm detected them straight away, of course.</p>\n"}, {"title": "Using (Ana)conda within PyCharm", "question_body": "<p>I've got Pycharm 4 running on my Linux (Ubuntu 14.04) machine.  In addition to the system python, I've also got Anaconda installed.  Getting the two to play nicely together seems to be a bit of a problem... PyCharm provides some interesting integration for <code>virtualenv</code>s and <code>pip</code>, but the Anaconda Python distribution seems to prefer using its own <code>conda</code> tool for both activities.</p>\n\n<p>Is there a relatively simple/painless way to be able to use <code>conda</code> in conjunction with PyCharm?  Not just as an alternative interpreter i.e. point PyCharm at the Anaconda Python binary for a project interpreter, but to be able to create, source/activate and deactivate virtual envs, add/remove packages in those virtual envs, etc. </p>\n\n<p>Or am I going to have to choose between using Anaconda (and having a more recent and up-to-date python than may come with the system), and being able to use PyCharm's features to their fullest extent?</p>\n", "link": "https://stackoverflow.com/questions/28390961/using-anaconda-within-pycharm", "question_id": 28390961, "accepted_answer_id": 31937300, "answer_body": "<p>I know it's late, but I thought it would be nice to clarify things: PyCharm and Conda <em>and pip</em> work well together. </p>\n\n<h2>The short answer</h2>\n\n<p>Just manage Conda <strong>from the command line</strong>. PyCharm will automatically notice changes once they happen, just like it does with <strong>pip</strong>.</p>\n\n<h2>The long answer</h2>\n\n<p>Create a new Conda environment:</p>\n\n<p><code>conda create --name foo pandas bokeh\n</code></p>\n\n<p>This environment lives under <code>conda_root/envs/foo</code>. Your python interpreter is <code>conda_root/envs/foo/bin/pythonX.X</code> and your all your site-packages are in <code>conda_root/envs/foo/lib/pythonX.X/site-packages</code>. This is same directory structure as in a pip virtual environement. PyCharm sees no difference.</p>\n\n<p>Now to activate your new environment from PyCharm go to <em>file > settings > project > interpreter</em>, select <em>Add local</em> in the project interpreter field (the little gear wheel) and hunt down your python interpreter. Congratulations! You now have a Conda environment with pandas and bokeh!</p>\n\n<p>Now install more packages:</p>\n\n<p><code>conda install scikit-learn\n</code></p>\n\n<p>OK... go back to your interpreter in settings. Magically, PyCharm now sees scikit-learn!</p>\n\n<p>And <strong>the reverse is also true</strong>, i.e. when you pip install another package in PyCharm, Conda will automatically notice. Say you've installed requests. Now list the Conda packages in your current environment:</p>\n\n<p><code>conda list\n</code></p>\n\n<p>The list now includes requests and Conda has correctly detected (3rd column) that it was installed with pip.</p>\n\n<h2>Conclusion</h2>\n\n<p>This is definitely good news for people like myself who are trying to get away from the pip/virtualenv installation problems when packages are not pure python. </p>\n\n<p><strong>NB:</strong> I run PyCharm pro edition 4.5.3 on Linux. For Windows users, replace <em>in command line</em> with <em>in the GUI</em> (and forward slashes with backslashes). There's no reason it shouldn't work for you too. </p>\n\n<p><strong>EDIT:</strong> PyCharm5 is out with Conda support! In the community edition too.</p>\n"}, {"title": "In PyCharm, how to go back to last location?", "question_body": "<p>I've tried these answers, but nothing happened: <a href=\"https://stackoverflow.com/questions/7441541/keyboard-shortcut-for-jump-to-previous-view-location-in-intellij-idea\">Keyboard shortcut for Jump to Previous View Location (Navigate back/forward) in IntelliJ IDEA</a></p>\n\n<p>For example:</p>\n\n<ol>\n<li>I'm navigating to a function body,</li>\n<li>put the cursor on a function call,</li>\n<li>click <kbd>F12</kbd> (\"go to definition\")</li>\n<li>from the new location (the function's body), how do I return to the function call?</li>\n</ol>\n\n<p>I've tried these, but they didn't do anything:</p>\n\n<ul>\n<li><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Left</kbd></li>\n<li><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>F2</kbd>      &lt;-- this is my default mapping </li>\n<li><kbd>Alt</kbd>+<kbd>Shift</kbd>+<kbd>Left</kbd></li>\n<li><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>backspace</kbd></li>\n<li>don't try that on linux:  <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>backspace</kbd></li>\n</ul>\n\n<p>Or maybe <kbd>F12</kbd> (\"go to def\") isn't \"strong enough\" to trigger a location-change event?</p>\n", "link": "https://stackoverflow.com/questions/25103626/in-pycharm-how-to-go-back-to-last-location", "question_id": 25103626, "accepted_answer_id": null}, {"title": "Symbol not found: __PyCodecInfo_GetIncrementalDecoder", "question_body": "<p>Since updating from Homebrew Python 2.7.11 (from 2.7.10) I'm suddenly unable to test register my package on PyPi from the PyCharm IDE console.</p>\n\n<p>Running (as an \"External Tool\")</p>\n\n<pre><code>python -B setup.py register -r pypitest\n</code></pre>\n\n<p>I now get</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"setup.py\", line 22, in &lt;module&gt;\n    from setuptools import setup\n  File \"/usr/local/lib/python2.7/site-packages/setuptools/__init__.py\", line 12, in &lt;module&gt;\n    from setuptools.extension import Extension\n  File \"/usr/local/lib/python2.7/site-packages/setuptools/extension.py\", line 8, in &lt;module&gt;\n    from .dist import _get_unpatched\n  File \"/usr/local/lib/python2.7/site-packages/setuptools/dist.py\", line 16, in &lt;module&gt;\n    from setuptools.depends import Require\n  File \"/usr/local/lib/python2.7/site-packages/setuptools/depends.py\", line 6, in &lt;module&gt;\n    from setuptools import compat\n  File \"/usr/local/lib/python2.7/site-packages/setuptools/compat.py\", line 17, in &lt;module&gt;\n    import httplib\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 80, in &lt;module&gt;\n    import mimetools\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/mimetools.py\", line 6, in &lt;module&gt;\n    import tempfile\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tempfile.py\", line 32, in &lt;module&gt;\n    import io as _io\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/io.py\", line 51, in &lt;module&gt;\n    import _io\nImportError: dlopen(/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so, 2): Symbol not found: __PyCodecInfo_GetIncrementalDecoder\n  Referenced from: /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so\n  Expected in: flat namespace\n in /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_io.so\n\nProcess finished with exit code 1\n</code></pre>\n\n<p>I'm not sure how to proceed. I only get this issue if I execute from within my IDE's console. If I do it directly at the system command line (Terminal on OS X) I have no problems.</p>\n\n<hr>\n\n<p>OS X 10.11.3; Homebrew Python 2.7.11; PyCharm 5.0.3</p>\n", "link": "https://stackoverflow.com/questions/34386527/symbol-not-found-pycodecinfo-getincrementaldecoder", "question_id": 34386527, "accepted_answer_id": null}]